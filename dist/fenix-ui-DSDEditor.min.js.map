{"version":3,"sources":["webpack:///fenix-ui-DSDEditor.min.js","webpack:///webpack/bootstrap 2296bf36e62f88a28671","webpack:///./src/js/index.js","webpack:///external \"jquery\"","webpack:///./src/js/DSDEditor/DSDEditor.js","webpack:///./src/js/DSDEditor/validators/Validator_DSD.js","webpack:///external \"loglevel\"","webpack:///./src/js/DSDEditor/validators/Validator_DSD_Errors.js","webpack:///./src/js/DSDEditor/html/DSDEditor.html","webpack:///./src/js/DSDEditor/DSDDisplay/js/DSDDisplay.js","webpack:///./src/js/DSDEditor/DSDDisplay/html/DSDDisplay.html","webpack:///./src/js/DSDEditor/DSDDisplay/js/comp/AddColButton.js","webpack:///./src/js/DSDEditor/DSDDisplay/html/comp/AddColButton.html","webpack:///./src/js/DSDEditor/DSDColumnEditor/js/Events.js","webpack:///external \"amplify-pubsub\"","webpack:///./src/js/DSDEditor/DSDDisplay/js/comp/ColsDisplay.js","webpack:///./src/js/DSDEditor/DSDDisplay/html/comp/ColsDisplay.html","webpack:///./src/js/DSDEditor/DSDEditor_Utils.js","webpack:///./src/js/DSDEditor/DSDDisplay/js/comp/colsDisplay/ColsDisplayBtns.js","webpack:///./src/js/DSDEditor/DSDDisplay/html/comp/colsDisplay/ColsDisplayBtns.html","webpack:///./src/js/DSDEditor/DSDConfigs/js/CodelistConfigReader.js","webpack:///./src/config/config.js","webpack:///./src/config/config-default.js","webpack:///./src/nls/labels.js","webpack:///./src/nls/en/labels.js","webpack:///./src/nls/fr/labels.js","webpack:///./src/js/DSDEditor/DSDColumnEditor/js/DSDColumnEditor.js","webpack:///./src/js/DSDEditor/DSDConfigs/js/DatatypeReader.js","webpack:///./src/js/DSDEditor/DSDConfigs/config/Datatypes.json","webpack:///./src/js/DSDEditor/DSDColumnEditor/html/DSDColumnEditor.html","webpack:///./src/js/DSDEditor/DSDColumnEditor/js/comp/DynamicRadio.js","webpack:///./src/js/DSDEditor/DSDColumnEditor/html/comp/DynamicRadio.html","webpack:///./src/js/DSDEditor/DSDColumnEditor/js/comp/DomainEditor.js","webpack:///./src/js/DSDEditor/DSDColumnEditor/html/comp/DomainEditor.html","webpack:///./src/js/DSDEditor/DSDColumnEditor/js/comp/domainEditors/CodelistSelector.js","webpack:///./src/js/DSDEditor/DSDColumnEditor/html/comp/domainEditors/CodelistSelector.html","webpack:///./src/js/DSDEditor/DSDConfigs/js/ColumnEditorReader.js","webpack:///./src/js/DSDEditor/DSDConfigs/config/ColumnEditorCfg.json","webpack:///./src/js/DSDEditor/DSDConfigs/js/SubjectReader.js","webpack:///./src/js/DSDEditor/DSDConfigs/config/Subjects.json","webpack:///./src/js/MLInput.js","webpack:///./src/html/MLInput.html","webpack:///external \"parsleyjs\"","webpack:///./src/js/DSDEditor/ColumnIDGenerator.js"],"names":["define","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_41__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","DSDEditor","init","containerID","config","callB","extend","cfg","defConfig","this","DSDE","render","set","cols","get","validate","editable","reset","destroy","hasChanged","apply","undefined","log","DSDEditorHTML","DSDDisplay","DSDColumnEditor","ColumnIDGenerator","Evts","ValidatorDSD","VErrors","C","CD","MLRes","amplify","$container","lang","toLowerCase","$divDSDDisplay","$divColEditor","dsd","colEditor","changed","getColumnIndexById","i","length","getColumnById","idx","htmlIDs","divDSD","divColEditor","divColEditorCnt","btnAddDimension","btnAddValue","btnAddOther","btnColEditorOk","btnColEditorCancel","colTypes","dimension","value","other","e","DSDEDITOR_TO_COLUMN_EDITOR","DSDEDITOR_TO_COLUMN_SUMMARY","prototype","cnt","html","find","hide","_bindEvents","info","updateDSDView","switchVisibility","divID","show","publish","addColumn","colType","newColumn","setColumnEditorType","editColumn","col","setColumn","colEditDone","colToAdd","getColumn","generate","push","_sortColumnsByType","sort","a","b","key","subject","setCols","_colAddClick","evtId","initDSD","me","subscribe","COLUMN_CLICK_ADD","on","val","confirm","COLUMN_CLICK_EDIT","_colDisplayEditClicked","COLUMN_CLICK_DELETE","_colDisplayDeleteClicked","_unbindEvents","unsubscribe","off","colId","toEdit","colIdx","splice","setEditMode","domain","datatype","isEditable","valRes","validateColumns","updateValidationUI","isValid","warn","message","VE","Validator_DSD","validateTitle","toVal","isEmptyObject","field","level","eLevels","ERROR","TITLE_BLANK","validateDimension","allowedDatatypes","dataType","DIMENSION_DATATYPE_ERROR","validateSubject","SUBJECT_EMPTY","validateDatatype","DATATYPE_EMPTY","validateDomain","codes","idCodeList","CODELIST_EMPTY","validateStructure","toRet","NULL_COLUMNS","AT_LEAST_2_COLS","j","DUPLICATE_IDS","keyCount","valCount","AT_LEAST_1_KEY","AT_LEAST_1_VALUE","ArrConcat","Array","allowedKeyDataTypes","validateColumn","title","NULL_COLUMN","valStructure","colValRes","DUPLICATE_SUBJECTS","DSDDisplayHTML","AddColButton","ColsDisplay","$tdAddDim","$tdAddVal","$tdAddOther","$colsDisplay","addColBtnDim","addColBtnVal","addColBtnOther","colsDisplay","h","idTDAddDim","idTDAddVal","idTDAddOther","idColsDisplay","idTblAddCol","help","headerClass","AddColButtonHTML","$btnAddColTitle","$btnAdd","$tdAddColButton_help","idBtnAddColTitle","idBtnAdd","idTdAddColButton_help","idAddColH","addColButton_btnClick","vals","setTitle","setHelp","setEvtId","addClass","msg","CODELIST_SELECTOR_CHANGED","DYNAMIC_RADIO_CHANGED","ColsDisplayHTML","DSDEditor_Utils","ColsDisplayBtns","CodelistConfigReader","$trHead","$trEdit","$trSubj","$trDataType","$trDomain","editBtns","createColTH","_html","colTH","replace","utils","MLStringToString","idTrHead","idTrEdit","idTrSubj","idTrDataType","idTrDomain","idTrSuppl","colTH_empty","colTD_empty","colTD_Edit","colTD","colSubj","colDataType","colDomain","colSuppl","$trSuppl","_createHeader","_createEditRow","_createRows","toSet","idPart","toFind","td","btn","setEventId","deleteEnabled","subj","dT","suppl","_createColTD","_domainToString","supplemental","clId","version","clCfg","cl","getCodelist","text","MLString","separator","l","substring","ColsDisplayBtnsHTML","$btnEdit","$btnDel","idBtnEdit","idBtnDel","clickEdit","clickDelete","enabled","prop","DC","codelists","DSD_EDITOR_CODELISTS","getCodelists","getFilteredCodelists","codelistId","LANG","LOCALE","LANGFALLBACKORDER","SECONDARY_MENU","url","disable","DSD_EDITOR_CONTEXT_SYSTEM","DSD_EDITOR_DATASOURCES","DSD_EDITOR_SUBJECTS","DSD_EDITOR_DATATYPES","DATA_MANAGEMENT_NOT_LOGGEDIN_URL","FAKE_AUTHENTICATION","CATALOG_BLANK_FILTER","SERVICE_BASE_ADDRESS","SERVICE_GET_DATA_METADATA","service","queryParams","full","SERVICE_GET_METADATA","SERVICE_COPY_METADATA","export","SERVICE_SAVE_METADATA","SERVICE_SAVE_DSD","SERVICE_SAVE_DATA","SERVICE_RESOURCES_FIND","i18nEn","i18nFr","en","fr","yes","no","ok","cancel","add","done","delete","updated","confirmDelete","edit","areYouSure","unsavedChanges","select","nullColumns","atLeast2Cols","atLeastOneKey","atLeastOneValue","nullColumn","empty","DimensionDataTypeConflict","EmptyIdCodeList","duplicateColumnIDs","duplicateSubject","titleBlank","subjectEmpty","dataTypeEmpty","codelistEmpty","helpDim","helpVal","helpOther","DSDColumnEditorHTML","DynamicRadio","DomainEditor","mlRes","ColumnEditorReader","SubjectReader","DatatypeReader","MLInput","$cnt","inputLangs","$txtTitle","$txtSupplemental","dynRadioSubj","mlTitle","mlSupplemental","dynRadioDataType","editorType","colID","valuesField","domainEditor","columnEditorReader","subjectReader","datatypeReader","validator","editorsVisibilityCfg","showHide","$elem","visible","txtTitle","txtSupplemental","trSubj","tdSubj","trDataType","tdDataType","trDomain","tdDomain","tblColEditor","lblTitle","lblSuppl","lblSubj","lblDataType","lblDomain","EDITOR_TYPE","DATA_TYPES","code","RADIOGROUP_ID","SUBJ","DTYPE","$tdSubj","$tdDomain","$tdDataType","langs","_attachValidator","_doML","_subjectChanged","v","updateDataTypes","_dataTypeChanged","setMode","type","getColumnTypeSubjects","_subjectsVisible","s","getFilteredSubjects","s2","EN","checked","setRadios","columnType","dts","getSubjectDatatypes","dts2","getFilteredDatatypes","dts3","values","group","parsley","_detachValidator","addError","assert","updateClass","Datatypes","datatypes","getDatatypes","datatypeValues","toAdd","getDatatype","FR","DynamicRadioHTML","groupName","radioSettings","$radioGroup","_changed","evts","radioChanged","checkedValue","append","createRadio","radioSetting","radioId","createRadioId","$toRet","attr","groupN","filter","r","removeAttr","DomainEditorHTML","CodelistSelector","mode","$divNoDatatype","$divNoDomain","$divDomainEditor","codelistSelector","idNoDataType","idNoDomain","idEditor","MODES","year","month","date","customCode","setSubject","CodelistSelectorHTML","clReader","tmpVal","tmpSubj","idCodesDDL","ddlChange","$clDDl","_clLoaded","selVal","remove","selected","split","d","ColumnEditorCfg","columnECfg","getColumnEditorCfg","Subjects","subjs","getSubjects","subjsValues","getSubject","codelistSubject","MLInputHTML","$tblMLInput","txt","createLine","lCode","line","idlCode","idTblMLInput","_create","bindEvents","lCodes","trim","toUpperCase","isEmpty","unbindEvents","columns","newCol","_generate","nbr","found","newId"],"mappings":"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","file":"fenix-ui-DSDEditor.min.js","sourcesContent":["define([\"jquery\",\"loglevel\",\"amplify-pubsub\",\"parsleyjs\"], function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_41__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(3)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, DSDEditor) {\r\n\t\r\n\t    var defConfig = {};\r\n\t    var cfg = {};\r\n\t\r\n\t    function init(containerID, config, callB) {\r\n\t        $.extend(true, cfg, defConfig, config);\r\n\t        this.DSDE = new DSDEditor(cfg);\r\n\t        this.DSDE.render($(containerID), cfg, callB);\r\n\t    }\r\n\t\r\n\t    function set(cols) { this.DSDE.set(cols); }\r\n\t    function get() { return this.DSDE.get(); }\r\n\t    function validate() { return this.DSDE.validate(); }\r\n\t\r\n\t    function editable(editable) {\r\n\t        this.DSDE.editable(editable);\r\n\t    }\r\n\t\r\n\t    function reset() { this.DSDE.reset(); }\r\n\t    function destroy() { this.DSDE.destroy(); }\r\n\t    function hasChanged() { return this.DSDE.hasChanged(); }\r\n\t\r\n\t    return {\r\n\t        init: init,\r\n\t        set: set,\r\n\t        get: get,\r\n\t        validate: validate,\r\n\t        editable: editable,\r\n\t        reset: reset,\r\n\t        destroy: destroy,\r\n\t        hasChanged: hasChanged\r\n\t    }\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(5),\r\n\t    __webpack_require__(7),\r\n\t    __webpack_require__(8),\r\n\t    __webpack_require__(25),\r\n\t    __webpack_require__(42),\r\n\t    __webpack_require__(12),\r\n\t    __webpack_require__(4),\r\n\t    __webpack_require__(6),\r\n\t    __webpack_require__(20),\r\n\t    __webpack_require__(21),\r\n\t    __webpack_require__(22),\r\n\t    __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, log, DSDEditorHTML, DSDDisplay, DSDColumnEditor, ColumnIDGenerator, Evts, ValidatorDSD, VErrors, C, CD, MLRes, amplify) {\r\n\t        var defConfig = {};\r\n\t        var htmlIDs = {\r\n\t            divDSD: \"#divDSD\",\r\n\t            divColEditor: \"#divColEditor\",\r\n\t            divColEditorCnt: \"#divColEditorCnt\",\r\n\t            btnAddDimension: '#btnAddDimension',\r\n\t            btnAddValue: '#btnAddValue',\r\n\t            btnAddOther: '#btnAddOther',\r\n\t            btnColEditorOk: '#btnColEditorOk',\r\n\t            btnColEditorCancel: '#btnColEditorCancel'\r\n\t        };\r\n\t        var colTypes = {\r\n\t            dimension: 'dimension',\r\n\t            value: 'value',\r\n\t            other: 'other'\r\n\t        };\r\n\t        var e = {\r\n\t            DSDEDITOR_TO_COLUMN_EDITOR: 'fx.DSDEditor.toColumnEditor',\r\n\t            DSDEDITOR_TO_COLUMN_SUMMARY: 'fx.DSDEditor.toColumnSummary'\r\n\t        };\r\n\t\r\n\t        function DSDEditor(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t            this.lang = this.config.lang.toLowerCase();\r\n\t\r\n\t            this.$divDSDDisplay;\r\n\t            this.$divColEditor;\r\n\t\r\n\t            this.dsd = [];\r\n\t            //this.addDatasourceAndContextSys();\r\n\t\r\n\t            this.DSDDisplay;\r\n\t            this.colEditor;\r\n\t            this.changed = false;\r\n\t        };\r\n\t\r\n\t        DSDEditor.prototype.render = function (cnt, config, callB) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t            this.$container.html(DSDEditorHTML);\r\n\t\r\n\t            this.$divDSDDisplay = this.$container.find(htmlIDs.divDSD);\r\n\t            this.$divColEditor = this.$container.find(htmlIDs.divColEditor);\r\n\t\r\n\t            this.DSDDisplay = new DSDDisplay(this.config);\r\n\t            this.DSDDisplay.render(this.$divDSDDisplay);\r\n\t\r\n\t            this.colEditor = new DSDColumnEditor(this.config);\r\n\t            var divColEditorCnt = this.$container.find(htmlIDs.divColEditorCnt);\r\n\t            this.colEditor.render(divColEditorCnt);\r\n\t            this.$divColEditor.hide();\r\n\t\r\n\t            this._bindEvents();\r\n\t\r\n\t            log.info(\"DSDEditor init with \",this.config);\r\n\t\r\n\t            if (callB) callB();\r\n\t        };\r\n\t\r\n\t        //Sets the dsd\r\n\t        DSDEditor.prototype.set = function (dsd) {\r\n\t            log.info('DSD Set', dsd);\r\n\t            this.dsd = dsd;\r\n\t            this.updateDSDView();\r\n\t        };\r\n\t        //gets the DSD\r\n\t        DSDEditor.prototype.get = function () {\r\n\t            return this.dsd;\r\n\t        };\r\n\t\r\n\t        //switches the panels' visibility\r\n\t        DSDEditor.prototype.switchVisibility = function (divID) {\r\n\t            if (divID == htmlIDs.divColEditor) {\r\n\t                this.$divDSDDisplay.hide();\r\n\t                this.$divColEditor.show();\r\n\t                amplify.publish(e.DSDEDITOR_TO_COLUMN_EDITOR);\r\n\t            }\r\n\t            else if (divID == htmlIDs.divDSD) {\r\n\t                this.$divColEditor.hide();\r\n\t                this.$divDSDDisplay.show();\r\n\t                amplify.publish(e.DSDEDITOR_TO_COLUMN_SUMMARY);\r\n\t            }\r\n\t        };\r\n\t        //Add a new column->switch to col view, sets the view mode\r\n\t        DSDEditor.prototype.addColumn = function (colType) {\r\n\t            this.switchVisibility(htmlIDs.divColEditor);\r\n\t            this.colEditor.newColumn();\r\n\t            this.colEditor.setColumnEditorType(colType);\r\n\t\r\n\t            //this.colEditor.setEditMode({subject:false,domain:false,datatype:false});\r\n\t        };\r\n\t        //Edit a columns\r\n\t        DSDEditor.prototype.editColumn = function (col) {\r\n\t            this.switchVisibility(htmlIDs.divColEditor);\r\n\t            this.colEditor.setColumn(col);\r\n\t        };\r\n\t        //Called when the user has finished editing a columns\r\n\t        DSDEditor.prototype.colEditDone = function () {\r\n\t            var colToAdd = this.colEditor.getColumn();\r\n\t            if (!this.dsd)\r\n\t                this.dsd = [];\r\n\t\r\n\t            //create a new id\r\n\t            if (colToAdd.id == \"\") {\r\n\t                colToAdd.id = new ColumnIDGenerator().generate(this.dsd, colToAdd);\r\n\t            }\r\n\t\r\n\t            var idx = getColumnIndexById(this.dsd, colToAdd.id);\r\n\t\r\n\t            log.info(idx, this.dsd, typeof (this.dsd), colToAdd);\r\n\t\r\n\t            if (idx == -1)\r\n\t                this.dsd.push(colToAdd);\r\n\t            else\r\n\t                this.dsd[idx] = colToAdd;\r\n\t\r\n\t            this._sortColumnsByType();\r\n\t            this.updateDSDView();\r\n\t            this.changed = true;\r\n\t        };\r\n\t\r\n\t        DSDEditor.prototype._sortColumnsByType = function () {\r\n\t            this.dsd.sort(function (a, b) {\r\n\t                //both key, keep the order\r\n\t                if (a.key && b.key) return 0;\r\n\t                if (a.key) return -1; //a is key, a goes first\r\n\t                if (b.key) return 1;\r\n\t                //two value columns are not allowed at the moment, for the future...\r\n\t                if (a.subject == 'value' && b.subject == 'value')\r\n\t                    return 0;\r\n\t                if (a.subject == 'value')\r\n\t                    return -1;\r\n\t                if (b.subject == 'value')\r\n\t                    return 1;\r\n\t                return 0;\r\n\t            });\r\n\t        };\r\n\t        //Refreshes the DSD view\r\n\t        DSDEditor.prototype.updateDSDView = function () {\r\n\t            this.DSDDisplay.setCols(this.dsd);\r\n\t        };\r\n\t\r\n\t        DSDEditor.prototype._colAddClick = function (evtId) {\r\n\t            if (evtId == 'addDim') {\r\n\t                this.addColumn(colTypes.dimension);\r\n\t            }\r\n\t            else if (evtId == 'addVal') {\r\n\t                this.addColumn(colTypes.value);\r\n\t            }\r\n\t            else if (evtId == 'addOther') {\r\n\t                this.addColumn(colTypes.other);\r\n\t            }\r\n\t        };\r\n\t        DSDEditor.prototype.reset = function () {\r\n\t            this.initDSD();\r\n\t            this.updateDSDView();\r\n\t            this.changed = false;\r\n\t        };\r\n\t        DSDEditor.prototype.hasChanged = function () {\r\n\t            return this.changed;\r\n\t        };\r\n\t        DSDEditor.prototype._bindEvents = function () {\r\n\t            var me = this;\r\n\t            amplify.subscribe(Evts.COLUMN_CLICK_ADD, this, me._colAddClick);\r\n\t\r\n\t            this.$container.find(htmlIDs.btnColEditorOk).on('click', function () {\r\n\t                var val = me.colEditor.validate();\r\n\t                if (!val) return;\r\n\t                me.colEditDone();\r\n\t                me.switchVisibility(htmlIDs.divDSD);\r\n\t            });\r\n\t            this.$container.find(htmlIDs.btnColEditorCancel).on('click', function () {\r\n\t                if (me.colEditor.changed()) {\r\n\t                    if (!confirm(MLRes[me.lang]['unsavedChanges']))\r\n\t                        return;\r\n\t                }\r\n\t\r\n\t                me.colEditor.reset();\r\n\t                me.switchVisibility(htmlIDs.divDSD);\r\n\t            });\r\n\t\r\n\t            amplify.subscribe(Evts.COLUMN_CLICK_EDIT, this, me._colDisplayEditClicked);\r\n\t            amplify.subscribe(Evts.COLUMN_CLICK_DELETE, this, me._colDisplayDeleteClicked);\r\n\t        };\r\n\t        DSDEditor.prototype._unbindEvents = function () {\r\n\t            amplify.unsubscribe(Evts.COLUMN_CLICK_ADD, this._colAddClick);\r\n\t            this.$container.find(htmlIDs.btnColEditorOk).off('click');\r\n\t            this.$container.find(htmlIDs.btnColEditorCancel).off('click');\r\n\t\r\n\t            amplify.unsubscribe(Evts.COLUMN_CLICK_EDIT, this._colDisplayEditClicked);\r\n\t            amplify.unsubscribe(Evts.COLUMN_CLICK_DELETE, this._colDisplayDeleteClicked);\r\n\t        };\r\n\t        DSDEditor.prototype.destroy = function () {\r\n\t            this._unbindEvents();\r\n\t            this.DSDDisplay.destroy();\r\n\t            this.colEditor.destroy();\r\n\t        };\r\n\t        //Edit col\r\n\t        DSDEditor.prototype._colDisplayEditClicked = function (colId) {\r\n\t            var toEdit = getColumnById(this.dsd, colId);\r\n\t            this.editColumn(toEdit);\r\n\t        };\r\n\t        //Delete a column\r\n\t        DSDEditor.prototype._colDisplayDeleteClicked = function (colId) {\r\n\t            if (!confirm(MLRes[this.lang]['areYouSure'])) return false;\r\n\t            var colIdx = getColumnIndexById(this.dsd, colId);\r\n\t            if (colIdx != -1) this.dsd.splice(colIdx, 1);\r\n\t            this.updateDSDView();\r\n\t            this.changed = true;\r\n\t        };\r\n\t        DSDEditor.prototype.editable = function (editable) {\r\n\t            //console.log(\"DSDEditor.editable\");\r\n\t            if (editable)\r\n\t                this.colEditor.setEditMode({ subject: true, domain: true, datatype: true });\r\n\t            else\r\n\t                this.colEditor.setEditMode({ subject: false, domain: false, datatype: false });\r\n\t            this.DSDDisplay.isEditable(editable);\r\n\t        };\r\n\t        //Validation\r\n\t        DSDEditor.prototype.validate = function () {\r\n\t            var val = new ValidatorDSD();\r\n\t            var valRes = val.validateColumns(this.get());\r\n\t            this.updateValidationUI(valRes);\r\n\t            if (!valRes || valRes.length == 0)\r\n\t                return true;\r\n\t            return false;\r\n\t        };\r\n\t        DSDEditor.prototype.isValid = function () {\r\n\t            var val = new ValidatorDSD();\r\n\t            var valRes = val.validateColumns(this.get());\r\n\t            if (!valRes || valRes.length == 0)\r\n\t                return true;\r\n\t            return false;\r\n\t        };\r\n\t        DSDEditor.prototype.updateValidationUI = function (valRes) {\r\n\t            if (!valRes)  return;\r\n\t            for (var i = 0; i < valRes.length; i++)\r\n\t                log.warn(valRes[i].message);\r\n\t                // TODO: Add Notification in a Centralized Fashon\r\n\t                // Noti.showError(\"Error\", valRes[i].message);\r\n\t        };\r\n\t        //Utils\r\n\t        function getColumnIndexById(cols, id) {\r\n\t            if (!cols)\r\n\t                return -1;\r\n\t            for (var i = 0; i < cols.length; i++)\r\n\t                if (cols[i].id == id)\r\n\t                    return i;\r\n\t            return -1;\r\n\t        };\r\n\t        function getColumnById(cols, id) {\r\n\t            var idx = getColumnIndexById(cols, id);\r\n\t            if (idx == -1)\r\n\t                return null;\r\n\t            return cols[idx];\r\n\t        };\r\n\t\r\n\t\r\n\t        return DSDEditor;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(5),\r\n\t    __webpack_require__(6)\r\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, log, VE) {\r\n\t        var defConfig = {\r\n\t            allowedKeyDataTypes: ['code', 'customCode', 'date', 'month', 'year']\r\n\t        };\r\n\t        var eLevels = {\r\n\t            ERROR: 'error'\r\n\t        };\r\n\t        function Validator_DSD(config) {\r\n\t            log.info(\"Validator_DSD\")\r\n\t            this.config = {};\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t        };\r\n\t\r\n\t        //COLUMN\r\n\t        Validator_DSD.prototype.validateColumn = function (col) {\r\n\t            var toRet = [];\r\n\t            if (!col) {\r\n\t                toRet.push({ level: eLevels.ERROR, message: VE.NULL_COLUMN });\r\n\t                return toRet;\r\n\t            }\r\n\t\r\n\t            ArrConcat(toRet, validateTitle(col.title));\r\n\t            ArrConcat(toRet, validateDimension(col, this.config.allowedKeyDataTypes));\r\n\t            ArrConcat(toRet, validateSubject(col));\r\n\t            ArrConcat(toRet, validateDatatype(col));\r\n\t            ArrConcat(toRet, validateDomain(col));\r\n\t\r\n\t            return toRet;\r\n\t        };\r\n\t\r\n\t        function validateTitle(toVal) {\r\n\t            if ($.isEmptyObject(toVal))\r\n\t                return { field: 'title', level: eLevels.ERROR, message: VE.TITLE_BLANK };\r\n\t            return null;\r\n\t        }\r\n\t        function validateDimension(toVal, allowedDatatypes) {\r\n\t            if (!toVal.key)//Not a Dimension\r\n\t                return null;\r\n\t            if (!toVal.dataType)//Datatype must be defined but it will be checked in the checkDatatype\r\n\t                return null;\r\n\t            for (var i = 0; i < allowedDatatypes.length; i++)\r\n\t                if (toVal.dataType == allowedDatatypes[i])\r\n\t                    return null;//ok\r\n\t            return { field: 'dimension', level: eLevels.ERROR, message: VE.DIMENSION_DATATYPE_ERROR };\r\n\t        }\r\n\t        function validateSubject(toVal) {\r\n\t            if (!toVal.key)\r\n\t                return null;\r\n\t            if (!toVal.subject)\r\n\t                return { field: 'subject', level: eLevels.ERROR, message: VE.SUBJECT_EMPTY };\r\n\t        }\r\n\t        function validateDatatype(toVal) {\r\n\t            if (!toVal.dataType)\r\n\t                return { field: 'dataType', level: eLevels.ERROR, message: VE.DATATYPE_EMPTY };\r\n\t        }\r\n\t        function validateDomain(toVal) {\r\n\t            if (!toVal.dataType) //dataType is already checked in another validation\r\n\t                return null;\r\n\t            if (toVal.dataType == 'code') {\r\n\t                //Make it multielement!\r\n\t                if (!toVal.domain || !toVal.domain.codes || !toVal.domain.codes[0] || !toVal.domain.codes[0].idCodeList)\r\n\t                    return { field: 'domain', level: eLevels.ERROR, message: VE.CODELIST_EMPTY };\r\n\t            }\r\n\t        }\r\n\t        //END COLUMN\r\n\t\r\n\t        //Validate all the columns and the structure (duplicate IDs, at least 2 cols...)\r\n\t        Validator_DSD.prototype.validateColumns = function (cols) {\r\n\t            var toRet = [];\r\n\t            var valStructure = validateStructure(cols);\r\n\t        //    var duplicateSubj = checkDuplicateSubject(cols);\r\n\t            ArrConcat(toRet, valStructure);\r\n\t        //    ArrConcat(toRet, duplicateSubj);\r\n\t            if (!cols)\r\n\t                return toRet;\r\n\t            for (var i = 0; i < cols.length; i++) {\r\n\t                var colValRes = this.validateColumn(cols[i]);\r\n\t                ArrConcat(toRet, colValRes);\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t\r\n\t\r\n\t        function validateStructure(cols) {\r\n\t            var toRet = [];\r\n\t            if (!cols) {\r\n\t                toRet.push({ level: eLevels.ERROR, message: VE.NULL_COLUMNS });\r\n\t                return toRet;\r\n\t            }\r\n\t            if (cols.length < 2) {\r\n\t                toRet.push({ level: eLevels.ERROR, message: VE.AT_LEAST_2_COLS });\r\n\t                return toRet;\r\n\t            }\r\n\t            for (var i = 0; i < cols.length - 1; i++) {\r\n\t                for (var j = i + 1; j < cols.length; j++) {\r\n\t                    if (cols[i].id == cols[j].id) {\r\n\t                        toRet.push({ level: eLevels.ERROR, message: VE.DUPLICATE_IDS });\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            //At least a key and a value?\r\n\t            var keyCount = 0;\r\n\t            var valCount = 0;\r\n\t            for (i = 0; i < cols.length; i++) {\r\n\t                if (cols[i].key)\r\n\t                    keyCount++;\r\n\t\r\n\t                if (cols[i].subject && cols[i].subject == 'value')\r\n\t                    valCount++;\r\n\t            }\r\n\t            if (keyCount < 1)\r\n\t                toRet.push({ level: eLevels.ERROR, message: VE.AT_LEAST_1_KEY });\r\n\t            if (valCount < 1)\r\n\t                toRet.push({ level: eLevels.ERROR, message: VE.AT_LEAST_1_VALUE });\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        function checkDuplicateSubject(cols) {\r\n\t            var toRet = [];\r\n\t            if (!cols)\r\n\t                return null;\r\n\t            for (var i = 0; i < cols.length - 1; i++) {\r\n\t                if (cols[i].subject != 'undefined') {\r\n\t                    for (var j = i + 1; j < cols.length; j++) {\r\n\t                        //   if (cols[i].subject && cols[j].subject) {\r\n\t                        if (cols[j].subject != 'undefined') {\r\n\t                            if (cols[i].subject == cols[j].subject) {\r\n\t                                toRet.push({ level: eLevels.ERROR, message: VE.DUPLICATE_SUBJECTS });\r\n\t                                return toRet;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        function ArrConcat(a, b) {\r\n\t            if (!b)\r\n\t                return;\r\n\t            if (!a)\r\n\t                a = [];\r\n\t            if (b instanceof Array)\r\n\t                Array.prototype.push.apply(a, b);\r\n\t            else\r\n\t                a.push(b);\r\n\t        };\r\n\t\r\n\t\r\n\t        return Validator_DSD;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t        'use strict';\r\n\t        var e = {\r\n\t            //Col errors\r\n\t            NULL_COLUMN: 'nullColumn',\r\n\t            TITLE_BLANK: 'titleBlank',\r\n\t            DIMENSION_DATATYPE_ERROR: 'dimnsionDataTypeError',\r\n\t            SUBJECT_EMPTY: 'subjectEmpty',\r\n\t            DATATYPE_EMPTY: 'dataTypeEmpty',\r\n\t            CODELIST_EMPTY: 'codelistEmpty',\r\n\t            //structure errors\r\n\t            NULL_COLUMNS: 'nullColumns',\r\n\t            AT_LEAST_2_COLS: 'atLeast2Cols',\r\n\t            DUPLICATE_IDS: 'duplicateIDs',\r\n\t            AT_LEAST_1_KEY: 'atLeast1Key',\r\n\t            AT_LEAST_1_VALUE: 'atLeast1Value',\r\n\t            DUPLICATE_SUBJECTS:'duplicateSubjects'\r\n\t        };\r\n\t        return e;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=divDSD> </div> <div id=divColEditor> <div id=divColEditorCnt> </div> <button id=btnColEditorOk class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button> <button id=btnColEditorCancel class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button> </div>\";\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(9),\r\n\t    __webpack_require__(10),\r\n\t    __webpack_require__(14),\r\n\t    __webpack_require__(22)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, DSDDisplayHTML, AddColButton, ColsDisplay, MLRes) {\r\n\t        var defConfig = {};\r\n\t        var h = {\r\n\t            idTDAddDim: '#tdAddDim',\r\n\t            idTDAddVal: '#tdAddVal',\r\n\t            idTDAddOther: '#tdAddOther',\r\n\t            idColsDisplay: '#colsDisplay',\r\n\t            idTblAddCol:'#tblAddCol'\r\n\t        };\r\n\t\r\n\t        function DSDDisplay(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t            this.$tdAddDim = null;\r\n\t            this.$tdAddVal = null;\r\n\t            this.$tdAddOther = null;\r\n\t            this.$colsDisplay = null;\r\n\t\r\n\t            this.lang = this.config.lang.toLowerCase();\r\n\t\r\n\t            this.addColBtnDim = new AddColButton(this.config);\r\n\t            this.addColBtnVal = new AddColButton(this.config);\r\n\t            this.addColBtnOther = new AddColButton(this.config);\r\n\t            this.colsDisplay = new ColsDisplay(this.config);\r\n\t\r\n\t        };\r\n\t\r\n\t        DSDDisplay.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t            this.$container.html(DSDDisplayHTML);\r\n\t\r\n\t            this.$tdAddDim = this.$container.find(h.idTDAddDim);\r\n\t            this.$tdAddVal = this.$container.find(h.idTDAddVal);\r\n\t            this.$tdAddOther = this.$container.find(h.idTDAddOther);\r\n\t            this.$colsDisplay = this.$container.find(h.idColsDisplay);\r\n\t\r\n\t            this.addColBtnDim.render(this.$tdAddDim);\r\n\t            this.addColBtnVal.render(this.$tdAddVal);\r\n\t            this.addColBtnOther.render(this.$tdAddOther);\r\n\t\r\n\t            this.addColBtnDim.set({\r\n\t                title: MLRes[this.lang]['dimension'],\r\n\t                help: MLRes[this.lang]['helpDim'],\r\n\t                evtId: 'addDim',\r\n\t                headerClass:'bg-dim'\r\n\t            });\r\n\t            this.addColBtnVal.set({\r\n\t                title: MLRes[this.lang]['value'],\r\n\t                help: MLRes[this.lang]['helpVal'],\r\n\t                evtId: 'addVal',\r\n\t                headerClass: 'bg-val'\r\n\t            });\r\n\t            this.addColBtnOther.set({\r\n\t                title: MLRes[this.lang]['other'],\r\n\t                help: MLRes[this.lang]['helpOther'],\r\n\t                evtId: 'addOther',\r\n\t                headerClass: 'bg-other'\r\n\t            });\r\n\t\r\n\t            this.colsDisplay.render(this.$colsDisplay);\r\n\t            this._bindEvents();\r\n\t        };\r\n\t\r\n\t        DSDDisplay.prototype.setCols = function (cols) {\r\n\t            this.reset();\r\n\t            this.colsDisplay.set(cols);\r\n\t        };\r\n\t        DSDDisplay.prototype.reset = function () {\r\n\t            this.colsDisplay.reset();\r\n\t        };\r\n\t\r\n\t        DSDDisplay.prototype._bindEvents = function () {};\r\n\t        DSDDisplay.prototype._unbindEvents = function () { };\r\n\t        DSDDisplay.prototype.destroy = function () {\r\n\t            this.addColBtnDim.destroy();\r\n\t            this.addColBtnVal.destroy();\r\n\t            this.addColBtnOther.destroy();\r\n\t            this.colsDisplay.destroy();\r\n\t        };\r\n\t        DSDDisplay.prototype.isEditable = function (editable) {\r\n\t            // return a boolean if the dsd is editable\r\n\t            //console.log ((typeof (editable) === 'boolean'))\r\n\t            if (typeof (editable) === 'boolean') {\r\n\t                //console.log(\"colsDisplay \" + typeof (this.colsDisplay.editable));\r\n\t                if (typeof (this.colsDisplay.editable) === 'function') this.colsDisplay.editable(editable);\r\n\t                if (editable) {\r\n\t                    this.$container.find(h.idTblAddCol).show();\r\n\t                   // if (typeof (this.colsDisplay) == 'function') this.colsDisplay.editable(editable);\r\n\t                } else {\r\n\t                    this.$container.find(h.idTblAddCol).hide();\r\n\t                }\r\n\t                return editable;\r\n\t            }\r\n\t            /*\r\n\t            this.colsDisplay.editable(editable);\r\n\t            if (editable) {\r\n\t                this.$container.find(h.idTblAddCol).show();\r\n\t            } else {\r\n\t                this.$container.find(h.idTblAddCol).hide();\r\n\t            }\r\n\t            */\r\n\t        };\r\n\t\r\n\t        return DSDDisplay;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<table id=tblAddCol class=table> <tbody> <tr> <td id=tdAddDim class=cTdDim></td> <td id=tdAddVal class=cTdVal></td> <td id=tdAddOther class=cTdOther></td> </tr> </tbody> </table> <div id=colsDisplay></div>\";\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(11),\r\n\t    __webpack_require__(12),\r\n\t    __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, AddColButtonHTML, Evts, amplify) {\r\n\t        var defConfig = {};\r\n\t\r\n\t        var h = {\r\n\t            idBtnAddColTitle: '#btnAddColButtonTitle',\r\n\t            idBtnAdd: '#btnAdd',\r\n\t            idTdAddColButton_help: '#tdAddColButton_help',\r\n\t            idAddColH: '#addColH'\r\n\t        };\r\n\t\r\n\t        var e = {\r\n\t            addColButton_btnClick: Evts.COLUMN_CLICK_ADD\r\n\t        };\r\n\t\r\n\t        function AddColButton(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t            this.evtId = \"\";\r\n\t\r\n\t            this.$btnAddColTitle = null;\r\n\t            this.$btnAdd = null;\r\n\t            this.$tdAddColButton_help = null;\r\n\t\r\n\t        };\r\n\t\r\n\t        AddColButton.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t            this.$container.html(AddColButtonHTML);\r\n\t\r\n\t            this.$btnAddColTitle = this.$container.find(h.idBtnAddColTitle);\r\n\t            this.$btnAdd = this.$container.find(h.idBtnAdd);\r\n\t            this.$tdAddColButton_help = this.$container.find(h.idTdAddColButton_help);\r\n\t\r\n\t            this._bindEvents();\r\n\t        };\r\n\t        AddColButton.prototype.set = function (vals) {\r\n\t\r\n\t            if (!vals)\r\n\t                return;\r\n\t            if (vals.title)\r\n\t                this.setTitle(vals.title);\r\n\t            if (vals.help)\r\n\t                this.setHelp(vals.help);\r\n\t            if (vals.evtId)\r\n\t                this.setEvtId(vals.evtId);\r\n\t            if (vals.headerClass)\r\n\t                this.$container.find(h.idAddColH).addClass(vals.headerClass);\r\n\t        };\r\n\t        AddColButton.prototype.setTitle = function (title) {\r\n\t            this.$btnAddColTitle.html(title);\r\n\t        };\r\n\t        AddColButton.prototype.setHelp = function (msg) {\r\n\t            this.$tdAddColButton_help.html(msg);\r\n\t        };\r\n\t        AddColButton.prototype.setEvtId = function (id) {\r\n\t            this.evtId=id;\r\n\t        };\r\n\t        AddColButton.prototype.reset = function () {\r\n\t            this.setTitle('');\r\n\t            this.setHelp('');\r\n\t        };\r\n\t\r\n\t        AddColButton.prototype._bindEvents = function () {\r\n\t            var me = this;\r\n\t            this.$btnAdd.on('click', function () { amplify.publish(e.addColButton_btnClick, me.evtId) });\r\n\t        };\r\n\t        AddColButton.prototype._unbindEvents = function () {\r\n\t            this.$btnAdd.off('click');\r\n\t        };\r\n\t        AddColButton.prototype.destroy = function () {\r\n\t            this._unbindEvents();\r\n\t        };\r\n\t\r\n\t        return AddColButton;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<table class=\\\"table roundBorder\\\"> <thead> <tr id=addColH> <th class=btnAddColHead> <span id=btnAddColButtonTitle></span> <br/> <button id=btnAdd type=button class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button> </th> </tr> </thead> <tbody> <tr> <td id=tdAddColButton_help></td> </tr> </tbody> </table>\";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t        'use strict';\r\n\t        var e = {\r\n\t            CODELIST_SELECTOR_CHANGED: 'fx.CodelistSelector.chaged',\r\n\t            DYNAMIC_RADIO_CHANGED: 'fx.DynamicRadio.chaged',\r\n\t\r\n\t            COLUMN_CLICK_ADD: 'fx.addColButton.btnClick',\r\n\t            COLUMN_CLICK_EDIT: 'fx.coldisplay.edit',\r\n\t            COLUMN_CLICK_DELETE: 'fx.coldisplay.delete'\r\n\t        };\r\n\t        return e;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(15),\r\n\t    __webpack_require__(16),\r\n\t    __webpack_require__(17),\r\n\t    __webpack_require__(19)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, ColsDisplayHTML, DSDEditor_Utils, ColsDisplayBtns, CodelistConfigReader) {\r\n\t        var defConfig = {\r\n\t            lang: \"EN\"\r\n\t        };\r\n\t\r\n\t        var h = {\r\n\t            idTrHead: '#trColInfoHead',\r\n\t            idTrEdit: '#trEdit',\r\n\t            idTrSubj: '#trSubj',\r\n\t            idTrDataType: '#trDataType',\r\n\t            idTrDomain: '#trDomain',\r\n\t            idTrSuppl: '#trSuppl'\r\n\t        };\r\n\t\r\n\t        var e = {\r\n\t        };\r\n\t\r\n\t        var _html = {\r\n\t            colTH_empty: '<th style=\"width:10%\"></th>',\r\n\t            colTD_empty: '<td></td>',\r\n\t            colTH: '<th class=\"%cl%\">%cnt%</th>',\r\n\t            colTD_Edit: '<td><div id=\"%id%\"></div></td>',\r\n\t            colTD: '<td>%cnt%</td>',\r\n\t            colSubj: '<td class=\"text-muted\">Subject</td>',\r\n\t            colDataType: '<td class=\"text-muted\">Data type</td>',\r\n\t            colDomain: '<td class=\"text-muted\">Domain</td>',\r\n\t            colSuppl: '<td class=\"text-muted\">Supplemental</td>'\r\n\t        };\r\n\t\r\n\t        var utils = new DSDEditor_Utils();\r\n\t\r\n\t        function ColsDisplay(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t            //console.log(\"ColsDisplay\", this.config);\r\n\t\r\n\t            this.$trHead = null;\r\n\t            this.$trEdit = null;\r\n\t            this.$trSubj = null;\r\n\t            this.$trDataType = null;\r\n\t            this.$trDomain = null;\r\n\t\r\n\t            this.editBtns = [];\r\n\t            this.editable;\r\n\t        };\r\n\t\r\n\t        ColsDisplay.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t            this.$container.html(ColsDisplayHTML);\r\n\t\r\n\t            this.$trHead = this.$container.find(h.idTrHead);\r\n\t            this.$trEdit = this.$container.find(h.idTrEdit);\r\n\t            this.$trSubj = this.$container.find(h.idTrSubj);\r\n\t            this.$trDataType = this.$container.find(h.idTrDataType);\r\n\t            this.$trDomain = this.$container.find(h.idTrDomain);\r\n\t            this.$trSuppl = this.$container.find(h.idTrSuppl);\r\n\t\r\n\t            this._bindEvents();\r\n\t        };\r\n\t        ColsDisplay.prototype.set = function (cols) {\r\n\t            this.reset();\r\n\t            if (!cols)\r\n\t                return;\r\n\t            this._createHeader(cols);\r\n\t            this._createEditRow(cols);\r\n\t            this._createRows(cols);\r\n\t        };\r\n\t        ColsDisplay.prototype._createHeader = function (cols) {\r\n\t            if (!cols)\r\n\t                return '';\r\n\t            var toRet = _html.colTH_empty;\r\n\t            for (var i = 0; i < cols.length; i++) {\r\n\t                toRet += createColTH(cols[i]);\r\n\t            }\r\n\t            this.$trHead.html(toRet);\r\n\t        };\r\n\t        function createColTH(col) {\r\n\t            var w = 90 / col.length;\r\n\t            var toRet = _html.colTH;\r\n\t            toRet = toRet.replace('%cnt%', utils.MLStringToString(col.title, '<br/>'));\r\n\t            if (col.key)\r\n\t                toRet = toRet.replace('%cl%', 'bg-dim');\r\n\t            else if (col.subject == 'value')\r\n\t                toRet = toRet.replace('%cl%', 'bg-val');\r\n\t            else\r\n\t                toRet = toRet.replace('%cl%', 'bg-other');\r\n\t            return toRet;\r\n\t        }\r\n\t        ColsDisplay.prototype._createEditRow = function (cols) {\r\n\t            //console.log(\"ColsDisplay :\"+this.editable);\r\n\t            if (!cols)\r\n\t                return;\r\n\t            var toSet = _html.colTD_empty;\r\n\t            var idPart = \"tdEdit_\";\r\n\t            for (var i = 0; i < cols.length; i++) {\r\n\t                toSet += _html.colTD_Edit.replace(\"%id%\", idPart + \"\" + cols[i].id);\r\n\t            }\r\n\t            this.$trEdit.html(toSet);\r\n\t            this.editBtns = [];\r\n\t\r\n\t            for (i = 0; i < cols.length; i++) {\r\n\t                var toFind = '#' + idPart + \"\" + cols[i].id;\r\n\t                var td = this.$trEdit.find(toFind);\r\n\t                var btn = new ColsDisplayBtns(this.config);\r\n\t                btn.render(td);\r\n\t                btn.setEventId(cols[i].id);\r\n\t                btn.deleteEnabled(this.editable);\r\n\t                this.editBtns.push(btn);\r\n\t            }\r\n\t        };\r\n\t\r\n\t        ColsDisplay.prototype._createRows = function (cols) {\r\n\t            if (!cols)\r\n\t                return '';\r\n\t            var subj = _html.colSubj;\r\n\t            var dT = _html.colDataType;\r\n\t            var domain = _html.colDomain;\r\n\t            var suppl = _html.colSuppl;\r\n\t            for (var i = 0; i < cols.length; i++) {\r\n\t                subj += this._createColTD(cols[i], 'subject', this.config.lang);\r\n\t                dT += this._createColTD(cols[i], 'dataType', this.config.lang);\r\n\t                domain += this._createColTD(cols[i], 'domain', this.config.lang);\r\n\t                suppl += this._createColTD(cols[i], 'supplemental', this.config.lang);\r\n\t            }\r\n\t            this.$trSubj.html(subj);\r\n\t            this.$trDataType.html(dT);\r\n\t            this.$trDomain.html(domain);\r\n\t            this.$trSuppl.html(suppl);\r\n\t        };\r\n\t        ColsDisplay.prototype._createColTD = function (col, field, lang) {\r\n\t            var toRet = _html.colTD;\r\n\t            switch (field) {\r\n\t                case 'subject':\r\n\t                    if (col.subject)\r\n\t                        toRet = toRet.replace('%cnt%', col.subject);\r\n\t                    else\r\n\t                        toRet = toRet.replace('%cnt%', '');\r\n\t                    break;\r\n\t                case 'dataType':\r\n\t                    if (col.dataType)\r\n\t                        toRet = toRet.replace('%cnt%', col.dataType);\r\n\t                    else\r\n\t                        toRet = toRet.replace('%cnt%', '');\r\n\t                    break;\r\n\t                case 'domain':\r\n\t                    if (col.domain)\r\n\t                        toRet = toRet.replace('%cnt%', this._domainToString(col.domain, lang));\r\n\t                    else\r\n\t                        toRet = toRet.replace('%cnt%', '');\r\n\t                    break;\r\n\t                case 'supplemental':\r\n\t                    if (col.supplemental)\r\n\t                        toRet = toRet.replace('%cnt%', utils.MLStringToString(col.supplemental, '<br/>'));\r\n\t                    else\r\n\t                        toRet = toRet.replace('%cnt%', '');\r\n\t                    break;\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t        ColsDisplay.prototype._domainToString = function(domain, lang) {\r\n\t            //Make it multielement\r\n\t            if (domain.codes && domain.codes[0]) {\r\n\t                //Read the config reater just once!\r\n\t                var clId = domain.codes[0].idCodeList;\r\n\t                if (domain.codes[0].version)\r\n\t                    clId += \"|\" + domain.codes[0].version;\r\n\t                var clCfg = new CodelistConfigReader(this.config);\r\n\t                var cl = clCfg.getCodelist(clId);\r\n\t                if (!cl) return \"\";\r\n\t                return cl.text[lang];\r\n\t            }\r\n\t            return \"\";\r\n\t        };\r\n\t        ColsDisplay.prototype.reset = function () {\r\n\t            this.$trHead.html('');\r\n\t            this.$trSubj.html('');\r\n\t            this.$trDataType.html('');\r\n\t            this.$trDomain.html('');\r\n\t            this.$trSuppl.html('');\r\n\t            this.editBtns = [];\r\n\t        };\r\n\t        ColsDisplay.prototype.editable = function (editable) {\r\n\t            //console.log(\"ColsDisplay.prototype.editable\", editable);\r\n\t            this.editable = editable;\r\n\t            if (this.editBtns) {\r\n\t                for (var i = 0; i < this.editBtns.length; i++)\r\n\t                    this.editBtns[i].deleteEnabled(editable);\r\n\t            }\r\n\t            return editable;\r\n\t            /*if (editable)\r\n\t                this.$trEdit.show();\r\n\t            else\r\n\t                this.$trEdit.hide();*/\r\n\t        };\r\n\t\r\n\t        ColsDisplay.prototype._bindEvents = function () { };\r\n\t        ColsDisplay.prototype._unbindEvents = function () { };\r\n\t        ColsDisplay.prototype.destroy = function () {\r\n\t            //this._unbindEvents();\r\n\t            if (this.editBtns) {\r\n\t                for (var i = 0; i < this.editBtns.length; i++)\r\n\t                    this.editBtns[i].destroy();\r\n\t            }\r\n\t        };\r\n\t\r\n\t        return ColsDisplay;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<table class=\\\"table table-bordered\\\"> <thead> <tr id=trColInfoHead></tr> </thead> <tbody> <tr id=trEdit></tr> <tr id=trSubj></tr> <tr id=trDataType></tr> <tr id=trDomain></tr> <tr id=trSuppl></tr> </tbody> </table>\";\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    var DSDEditor_Utils = function () {\r\n\t    };\r\n\t    DSDEditor_Utils.prototype.MLStringToString = function (MLString, separator) {\r\n\t        if (!MLString)\r\n\t            return \"\";\r\n\t        var toRet = \"\";\r\n\t        for (var l in MLString) {\r\n\t            toRet += l + \": \" + MLString[l] + separator;\r\n\t        }\r\n\t        //Removes the last separator\r\n\t        toRet = toRet.substring(0, toRet.length - separator.length);\r\n\t        return toRet;\r\n\t    }\r\n\t\r\n\t    return DSDEditor_Utils;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(18),\r\n\t    __webpack_require__(12),\r\n\t    __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, ColsDisplayBtnsHTML, Evts, amplify) {\r\n\t        var defConfig = {};\r\n\t\r\n\t        var h = {\r\n\t            idBtnEdit: '#colsDisplayColEdit',\r\n\t            idBtnDel: '#colsDisplayColDel',\r\n\t        };\r\n\t\r\n\t        var e = {\r\n\t            clickEdit: Evts.COLUMN_CLICK_EDIT,\r\n\t            clickDelete: Evts.COLUMN_CLICK_DELETE\r\n\t        };\r\n\t\r\n\t        function ColsDisplayBtns(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t            this.$btnEdit = null;\r\n\t            this.$btnDel = null;\r\n\t            this.evtId = \"\";\r\n\t\r\n\t        };\r\n\t\r\n\t        ColsDisplayBtns.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t\r\n\t            this.$container = cnt;\r\n\t            this.$container.html(ColsDisplayBtnsHTML);\r\n\t            this.$btnEdit = this.$container.find(h.idBtnEdit);\r\n\t            this.$btnDel = this.$container.find(h.idBtnDel);\r\n\t\r\n\t            this._bindEvents();\r\n\t        };\r\n\t\r\n\t        ColsDisplayBtns.prototype.deleteEnabled = function (enabled) {\r\n\t            //console.log(\"ColsDisplayBtns.prototype.deleteEnabled \", enabled)\r\n\t            if (typeof enabled === 'undefined')\r\n\t                return;\r\n\t            if (enabled)\r\n\t                this.$btnDel.prop(\"disabled\", false);\r\n\t            else\r\n\t                this.$btnDel.prop(\"disabled\", true);\r\n\t        };\r\n\t\r\n\t        ColsDisplayBtns.prototype.setEventId = function (evtId) {\r\n\t            this.evtId = evtId;\r\n\t        };\r\n\t\r\n\t        ColsDisplayBtns.prototype._bindEvents = function () {\r\n\t            var me = this;\r\n\t            this.$btnEdit.on('click', function () { amplify.publish(e.clickEdit, me.evtId); });\r\n\t            this.$btnDel.on('click', function () { amplify.publish(e.clickDelete, me.evtId); });\r\n\t        };\r\n\t        ColsDisplayBtns.prototype._unbindEvents = function () {\r\n\t            this.$btnEdit.off('click');\r\n\t            this.$btnDel.off('click');\r\n\t        };\r\n\t        ColsDisplayBtns.prototype.destroy = function () {\r\n\t            this._unbindEvents();\r\n\t        };\r\n\t\r\n\t        return ColsDisplayBtns;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<button id=colsDisplayColEdit class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span> </button> <button id=colsDisplayColDel class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-trash\\\"></span> </button>\";\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(20),\r\n\t    __webpack_require__(21)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, C, DC) {\r\n\t        var defConfig = {};\r\n\t\r\n\t        function CodelistConfigReader(config, callB) {\r\n\t            this.config = {};\r\n\t            $.extend(true, this.config, config, defConfig);\r\n\t\r\n\t            this.codelists = this.config.DSD_EDITOR_CODELISTS;\r\n\t\r\n\t            if (callB) callB();\r\n\t        };\r\n\t\r\n\t        CodelistConfigReader.prototype.getCodelists = function () {\r\n\t            return this.codelists;\r\n\t        }\r\n\t\r\n\t        CodelistConfigReader.prototype.getFilteredCodelists = function (subject) {\r\n\t            if (!this.codelists)\r\n\t                return null;\r\n\t            if (!subject || subject=='undefined')\r\n\t                return this.codelists;\r\n\t            var toRet = [];\r\n\t\r\n\t            for (var i = 0; i < this.codelists.length; i++) {\r\n\t                if (this.codelists[i].subject.toLowerCase() == subject.toLowerCase()) {\r\n\t                    toRet.push(this.codelists[i]);\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t\r\n\t        CodelistConfigReader.prototype.getCodelist = function (codelistId) {\r\n\t            if (!this.codelists)\r\n\t                return null;\r\n\t            for (var i = 0; i < this.codelists.length; i++) {\r\n\t                if (this.codelists[i].value == codelistId)\r\n\t                    return this.codelists[i];\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t\r\n\t        return CodelistConfigReader;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    return {\r\n\t\r\n\t    };\r\n\t\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t    return {\r\n\t\r\n\t        LANG : \"EN\",\r\n\t        LOCALE : \"en_EN\",\r\n\t        LANGFALLBACKORDER : [\"EN\", \"FR\", \"ES\", \"AR\", \"PR\"],\r\n\t\r\n\t        SECONDARY_MENU: {\r\n\t            url: 'fx-d-m/config/secondary_menu.json',\r\n\t            disable: ['delete', 'close', 'data', 'dsd']\r\n\t        },\r\n\t\r\n\t        DSD_EDITOR_CONTEXT_SYSTEM: 'demo1',\r\n\t        DSD_EDITOR_DATASOURCES: ['D3S'],\r\n\t        DSD_EDITOR_SUBJECTS: \"submodules/fenix-ui-DSDEditor/config/DSDEditor/Subjects.json\",\r\n\t        DSD_EDITOR_DATATYPES: \"submodules/fenix-ui-DSDEditor/config/DSDEditor/Datatypes.json\",\r\n\t        DSD_EDITOR_CODELISTS: \"config/submodules/DSDEditor/cstat_core_codelists.json\",\r\n\t\r\n\t        DATA_MANAGEMENT_NOT_LOGGEDIN_URL: \"./index.html\",\r\n\t        FAKE_AUTHENTICATION: true,\r\n\t\r\n\t        CATALOG_BLANK_FILTER: 'config/submodules/catalog/uae-catalog-blank-filter.json',\r\n\t\r\n\t        SERVICE_BASE_ADDRESS: \"http://fenix.fao.org/d3s_fenix/msd\",\r\n\t        SERVICE_GET_DATA_METADATA: {service: \"resources\", queryParams: {full: true, dsd: true}},\r\n\t        SERVICE_GET_METADATA: {service: \"resources/metadata\", queryParams: {full: true, dsd: true}},\r\n\t        SERVICE_COPY_METADATA: {service: \"resources/metadata\", queryParams: {full: true, dsd: true, export:true}},\r\n\t        SERVICE_SAVE_METADATA: {service: \"resources/metadata\"},\r\n\t        SERVICE_SAVE_DSD: {service: \"resources/dsd\"},\r\n\t        SERVICE_SAVE_DATA: {service: \"resources\"},\r\n\t        SERVICE_RESOURCES_FIND: {service: \"resources/find\"}\r\n\t\r\n\t\r\n\t    };\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(23),\r\n\t        __webpack_require__(24)\r\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function (i18nEn,i18nFr) {\r\n\t\r\n\t        'use strict';\r\n\t\r\n\t        return {\r\n\t\r\n\t            en: i18nEn,\r\n\t            fr: i18nFr\r\n\t\r\n\t        }\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\r\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    return {\r\n\t\r\n\t        \"yes\": \"Yes\",\r\n\t        \"no\": \"No\",\r\n\t        \"ok\": \"Ok\",\r\n\t        \"cancel\": \"Cancel\",\r\n\t        \"add\": \"Add\",\r\n\t        \"done\": \"Done\",\r\n\t        \"reset\": \"Reset\",\r\n\t        \"delete\": \"Delete\",\r\n\t        \"updated\": \"Updated\",\r\n\t        \"confirmDelete\": \"Delete?\",\r\n\t        \"edit\": \"Edit\",\r\n\t        \"title\": \"Title\",\r\n\t        \"subject\": \"Subject\",\r\n\t        \"domain\": \"Domain\",\r\n\t        \"key\": \"Key\",\r\n\t        \"datatype\": \"Data type\",\r\n\t        \"supplemental\": \"Supplemental\",\r\n\t        \"areYouSure\": \"Are you sure?\",\r\n\t        \"unsavedChanges\":\"Some changes are not saved, cancel anyway?\",\r\n\t\r\n\t        \"select\": \"Select...\",\r\n\t\r\n\t        \"nullColumns\": \"Columns cannot be empty\",\r\n\t        \"atLeast2Cols\": \"The dataset must have at least 2 columns\",\r\n\t        \"atLeastOneKey\": \"The dataset must have at least one Key\",\r\n\t        \"atLeastOneValue\": \"The dataset must have at least one 'value' subject\",\r\n\t        \"nullColumn\": \"Column cannot be null\",\r\n\t        \"empty\": \"Is empty\",\r\n\t        \"DimensionDataTypeConflict\": \"Conflict detected between value and datatype defined for the value\",\r\n\t        \"EmptyIdCodeList\": \"The codelist's ID cannot be empty\",\r\n\t        \"duplicateColumnIDs\": \"The column's ID must be unique, check your column's IDs\",\r\n\t        \"duplicateSubject\": \"Two columns cannot have the same subject, check your column's subjects\",\r\n\t\r\n\t\r\n\t        \"dataType\": \"Data type\",\r\n\t\r\n\t        \"titleBlank\": \"Title cannot be blank\",\r\n\t        \"subjectEmpty\": \"Subject cannot be empty\",\r\n\t        \"dataTypeEmpty\": \"Datatype cannot be empty\",\r\n\t        \"codelistEmpty\": \"Codelist cannot be empty\",\r\n\t\r\n\t        \"dimension\": \"Dimension\",\r\n\t        \"value\": \"Value\",\r\n\t        \"other\": \"Other\",\r\n\t        \"helpDim\": \"You need at least one dimension, dimensions are used to define your measure.<br/>Ex. Year, product, area...\",\r\n\t        \"helpVal\": \"You need exactly one measure. It is usually a number.<br/>Ex. Quantity, value...\",\r\n\t        \"helpOther\": \"Add additional informations attached to your measure.<br/>Ex. measurement unit, flags, notes...\"\r\n\t\r\n\t\r\n\t    }\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\r\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    return {\r\n\t\r\n\t        \"yes\": \"Oui\",\r\n\t        \"no\": \"Non\",\r\n\t        \"ok\": \"Ok\",\r\n\t        \"cancel\": \"Annuler\",\r\n\t        \"add\": \"Ajouter\",\r\n\t        \"done\": \"Terminé\",\r\n\t        \"reset\": \"Reset\",\r\n\t        \"delete\": \"Supprimer\",\r\n\t        \"updated\": \"Mis(e) à jour\",\r\n\t        \"confirmDelete\": \"Supprimer?\",\r\n\t        \"edit\": \"Éditer\",\r\n\t        \"title\": \"Titre\",\r\n\t        \"subject\": \"Sujet\",\r\n\t        \"domain\": \"Domaine\",\r\n\t        \"key\": \"Clé\",\r\n\t        \"datatype\": \"Type de donnée\",\r\n\t        \"supplemental\": \"Supplément\",\r\n\t        \"areYouSure\": \"Êtes-vous sûr?\",\r\n\t        \"unsavedChanges\": \"Certains changements n'ont pas été enregistrés, annuler quand même?\",\r\n\t\r\n\t        \"select\": \"Sélectionner\",\r\n\t\r\n\t        \"nullColumns\": \"Les colonnes ne peuvent pas être vides\",\r\n\t        \"atLeast2Cols\": \"La base de données doit contenir au moins 2 colonnes\",\r\n\t        \"atLeastOneKey\": \"La base de données doit contenir au moins une Clé\",\r\n\t        \"atLeastOneValue\": \"La base de données doit contenir au moins une colonne 'valeur'\",\r\n\t        \"nullColumn\": \"La colonne ne peut pas être nulle\",\r\n\t        \"empty\": \"Est vide(s)\",\r\n\t        \"DimensionDataTypeConflict\": \"Conflit détecté entre la valeur et le type de donnée défini pour la valeur\",\r\n\t        \"EmptyIdCodeList\": \"L'identifiant de la codeliste ne peut pas être vide\",\r\n\t        \"duplicateColumnIDs\": \"L'identifiant de la colonne doit être unique, s'il vous plaît vérifiez les identifiants des vos colonnes\",\r\n\t        \"duplicateSubject\": \"Deux colonnes ne peuvent pas avoir le même sujet, s'il vous plaît vérifier les sujets des vos colonnes\",\r\n\t\r\n\t        \"dataType\": \"[FR] Data type\",\r\n\t\r\n\t        \"titleBlank\": \"[FR] Title cannot be blank\",\r\n\t        \"subjectEmpty\": \"[FR] Subject cannot be empty\",\r\n\t        \"dataTypeEmpty\": \"[FR] Datatype cannot be empty\",\r\n\t        \"codelistEmpty\": \"[FR] Codelist cannot be empty\",\r\n\t\r\n\t        \"dimension\": \"[FR] Dimension\",\r\n\t        \"value\": \"[FR] Value\",\r\n\t        \"other\": \"[FR] Other\",\r\n\t        \"helpDim\": \"[FR] You need at least one dimension, dimensions are used to define your measure.<br/>Ex. Year, product, area...\",\r\n\t        \"helpVal\": \"[FR] You need exactly one measure. It is usually a number.<br/>Ex. Quantity, value...\",\r\n\t        \"helpOther\": \"[FR] Add additional informations attached to your measure.<br/>Ex. measurement unit, flags, notes...\"\r\n\t\r\n\t\r\n\t    }\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(5),\r\n\t    __webpack_require__(28),\r\n\t    __webpack_require__(29),\r\n\t    __webpack_require__(31),\r\n\t    __webpack_require__(22),\r\n\t        __webpack_require__(35),\r\n\t    __webpack_require__(37),\r\n\t    __webpack_require__(26),\r\n\t    __webpack_require__(39),\r\n\t    __webpack_require__(12),\r\n\t    __webpack_require__(4),\r\n\t    __webpack_require__(6),\r\n\t    __webpack_require__(13),\r\n\t    __webpack_require__(41)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, log, DSDColumnEditorHTML, DynamicRadio, DomainEditor, mlRes, ColumnEditorReader, SubjectReader, DatatypeReader, MLInput, Evts, ValidatorDSD, VErrors, amplify) {\r\n\t        //var defConfig = { inputLangs: ['EN', 'FR'] };\r\n\t\r\n\t        var defConfig = { inputLangs: ['EN'] };\r\n\t        var h = {\r\n\t            txtTitle: \"#txtTitle\",\r\n\t            txtSupplemental: '#txtSupplemental',\r\n\t            trSubj: '#trSubj',\r\n\t            tdSubj: '#tdSubj',\r\n\t            trDataType: \"#trDataType\",\r\n\t            tdDataType: \"#tdDataType\",\r\n\t            trDomain: '#trDomain',\r\n\t            tdDomain: '#tdDomainEditor',\r\n\t            tblColEditor: '#tblColEditor',\r\n\t\r\n\t            lblTitle: '#lTitle',\r\n\t            lblSuppl: '#lSupplemental',\r\n\t            lblSubj: '#lSubject',\r\n\t            lblDataType: '#lDataType',\r\n\t            lblDomain: '#lDomain'\r\n\t        };\r\n\t        var EDITOR_TYPE = {\r\n\t            dimension: 'dimension',\r\n\t            value: 'value',\r\n\t            other: 'other'\r\n\t        };\r\n\t        var DATA_TYPES = {\r\n\t            code: 'code'\r\n\t        };\r\n\t        var RADIOGROUP_ID = {\r\n\t            SUBJ: 'radioSubj',\r\n\t            DTYPE: 'radioDatatype'\r\n\t        };\r\n\t\r\n\t        function DSDColumnEditor(config) {\r\n\t            this.config = {};\r\n\t            this.$cnt = null;\r\n\t            $.extend(true, this.config, config, defConfig);\r\n\t\r\n\t            this.lang = this.config.inputLangs[0] || defConfig.inputLangs[0];\r\n\t            this.lang = this.lang.toLowerCase();\r\n\t\r\n\t            this.$txtTitle;\r\n\t            this.$txtSupplemental;\r\n\t            this.dynRadioSubj;\r\n\t            this.mlTitle;\r\n\t            this.mlSupplemental;\r\n\t            this.dynRadioDataType;\r\n\t\r\n\t            this.editorType = \"\";\r\n\t            this.colID = \"\";\r\n\t            //keep the values field, remove it when the column's distinct will be calculated by the server\r\n\t            this.valuesField = null; \r\n\t\r\n\t            this.domainEditor = new DomainEditor(this.config);\r\n\t            this.columnEditorReader = new ColumnEditorReader();\r\n\t            this.subjectReader = new SubjectReader();\r\n\t            this.datatypeReader = new DatatypeReader();\r\n\t\r\n\t            this.dynRadioSubj = null;\r\n\t            this.dynRadioDataType = null;\r\n\t\r\n\t            this.validator = null;\r\n\t\r\n\t            this.editorsVisibilityCfg = { subject: true, domain: true, datatype: true };\r\n\t\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$cnt = cnt;\r\n\t            this.$cnt.html(DSDColumnEditorHTML);\r\n\t\r\n\t            this.$txtTitle = this.$cnt.find(h.txtTitle);\r\n\t            this.$txtSupplemental = this.$cnt.find(h.txtSupplemental);\r\n\t\r\n\t            this.$trSubj = this.$cnt.find(h.trSubj);\r\n\t            var $tdSubj = this.$cnt.find(h.tdSubj);\r\n\t            this.$trDomain = this.$cnt.find(h.trDomain);\r\n\t            var $tdDomain = this.$cnt.find(h.tdDomain);\r\n\t            this.dynRadioSubj = new DynamicRadio();\r\n\t            this.dynRadioSubj.render($tdSubj);\r\n\t\r\n\t            this.$trDataType = this.$cnt.find(h.trDataType);\r\n\t            var $tdDataType = this.$cnt.find(h.tdDataType);\r\n\t            this.dynRadioDataType = new DynamicRadio();\r\n\t            this.dynRadioDataType.render($tdDataType);\r\n\t\r\n\t            this.mlTitle = new MLInput({ langs: this.config.inputLangs });\r\n\t            this.mlTitle.render(this.$txtTitle);\r\n\t            this.mlSupplemental = new MLInput({ langs: this.config.inputLangs });\r\n\t            this.mlSupplemental.render(this.$txtSupplemental);\r\n\t\r\n\t            this.domainEditor.render($tdDomain);\r\n\t\r\n\t            this._bindEvents();\r\n\t            this._attachValidator();\r\n\t            this._doML();\r\n\t        };\r\n\t\r\n\t        function showHide($elem, visible) {\r\n\t            if (typeof visible === 'undefined')\r\n\t                return;\r\n\t            if (visible)\r\n\t                $elem.show();\r\n\t            else\r\n\t                $elem.hide();\r\n\t        }\r\n\t        DSDColumnEditor.prototype.setEditMode = function (cfg) {\r\n\t            this.editorsVisibilityCfg = cfg;\r\n\t            showHide(this.$trSubj, cfg.subject);\r\n\t            showHide(this.$trDomain, cfg.domain);\r\n\t            showHide(this.$trDataType, cfg.datatype);\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype.newColumn = function () {\r\n\t            this.reset();\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype._subjectChanged = function (v) {\r\n\t            this.updateDataTypes(this.editorType, v);\r\n\t            this.domainEditor.reset();\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype._dataTypeChanged = function (v) {\r\n\t            this.domainEditor.setMode(v, this.dynRadioSubj.get());\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype.setColumnEditorType = function (type) {\r\n\t            this.editorType = type;\r\n\t            var subj = this.columnEditorReader.getColumnTypeSubjects(type);\r\n\t            if (!subj || subj.length == 0) {\r\n\t                this._subjectsVisible(false);\r\n\t                return;\r\n\t            }\r\n\t\r\n\t            var s = this.subjectReader.getFilteredSubjects(subj);\r\n\t            var s2 = [];\r\n\t            for (var i = 0; i < s.length; i++) {\r\n\t                s2.push({ value: s[i].value, text: s[i].text.EN });\r\n\t            }\r\n\t            var checked = null;\r\n\t            if (s2.length == 1) {\r\n\t                checked = s2[0].value;\r\n\t                this._subjectsVisible(false);\r\n\t            }\r\n\t            else {\r\n\t                this._subjectsVisible(true);\r\n\t            }\r\n\t\r\n\t            this.dynRadioSubj.setRadios(RADIOGROUP_ID.SUBJ, s2, checked);\r\n\t            this.updateDataTypes(type, checked);\r\n\t        };\r\n\t        DSDColumnEditor.prototype.updateDataTypes = function (columnType, subject) {\r\n\t            var dts = this.columnEditorReader.getSubjectDatatypes(columnType, subject);\r\n\t            if (!dts)\r\n\t                return;\r\n\t            var dts2 = this.datatypeReader.getFilteredDatatypes(dts);\r\n\t            var dts3 = [];\r\n\t            for (var i = 0; i < dts2.length; i++) {\r\n\t                dts3.push({ value: dts2[i].value, text: dts2[i].text.EN });\r\n\t            }\r\n\t            this.dynRadioDataType.setRadios(RADIOGROUP_ID.DTYPE, dts3, '');\r\n\t        };\r\n\t        DSDColumnEditor.prototype.reset = function () {\r\n\t            this.colID = \"\";\r\n\t            this.valuesField = null;\r\n\t            this.mlTitle.reset();\r\n\t            this.mlSupplemental.reset();\r\n\t            this.dynRadioSubj.reset();\r\n\t            this.dynRadioDataType.reset();\r\n\t            //this.editorType = \"\";\r\n\t            this.setColumnEditorType(\"\");\r\n\t            this.domainEditor.reset();\r\n\t        };\r\n\t        DSDColumnEditor.prototype._subjectsVisible = function (visible) {\r\n\t            //overridden by the component's config\r\n\t            if (typeof this.editorsVisibilityCfg.subject !== 'undefined')\r\n\t                if (!this.editorsVisibilityCfg.subject)\r\n\t                    return;\r\n\t\r\n\t            //var $trSubj = this.$cnt.find(h.trSubj);\r\n\t            if (visible)\r\n\t                this.$trSubj.show();\r\n\t            else\r\n\t                this.$trSubj.hide();\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype.getColumn = function () {\r\n\t            var toRet = {};\r\n\t            toRet.id = this.colID;\r\n\t            if (this.valuesField)\r\n\t                toRet.values = this.valuesField;\r\n\t            if (this.editorType == EDITOR_TYPE.dimension)\r\n\t                toRet.key = true;\r\n\t            else\r\n\t                toRet.key = false;\r\n\t            toRet.subject = this.dynRadioSubj.get();\r\n\t            toRet.dataType = this.dynRadioDataType.get();\r\n\t            toRet.title = this.mlTitle.get();\r\n\t            toRet.supplemental = this.mlSupplemental.get();\r\n\t            toRet.domain = this.domainEditor.get();\r\n\t\r\n\t            return toRet;\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype.setColumn = function (toSet) {\r\n\t            this.reset();\r\n\t            this.colID = toSet.id;\r\n\t            this.valuesField = toSet.values;\r\n\t            var type = EDITOR_TYPE.other;\r\n\t            if (toSet.key)\r\n\t                type = EDITOR_TYPE.dimension;\r\n\t            else if (toSet.subject == 'value')\r\n\t                type = EDITOR_TYPE.value;\r\n\t            this.setColumnEditorType(type);\r\n\t            this.mlTitle.set(toSet.title);\r\n\t            this.mlSupplemental.set(toSet.supplemental);\r\n\t            this.dynRadioSubj.set(toSet.subject);\r\n\t            this.dynRadioDataType.set(toSet.dataType);\r\n\t\r\n\t            if (toSet.dataType == DATA_TYPES.code) {\r\n\t                this.domainEditor.set(DATA_TYPES.code, toSet.subject, toSet.domain);\r\n\t            }\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype._bindEvents = function () {\r\n\t            var me = this;\r\n\t            amplify.subscribe(Evts.DYNAMIC_RADIO_CHANGED, this, function (val, group) {\r\n\t                if (group == RADIOGROUP_ID.SUBJ) { me._subjectChanged(val); }\r\n\t                else if (group == RADIOGROUP_ID.DTYPE) { me._dataTypeChanged(val); };\r\n\t            });\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype._unbindEvents = function () {\r\n\t            amplify.unsubscribe(Evts.DYNAMIC_RADIO_CHANGED);\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype._attachValidator = function () {\r\n\t            log.info(\"DSDColumnEditor.prototype._attachValidator\")\r\n\t            var tblColEditor = this.$cnt.find(h.tblColEditor);\r\n\t            this.validator = tblColEditor.parsley();\r\n\t        };\r\n\t        DSDColumnEditor.prototype._detachValidator = function () {\r\n\t            log.info(\"DSDColumnEditor.prototype._detachValidator\")\r\n\t            this.validator.destroy();\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype.validate = function () {\r\n\t            log.info(\"DSDColumnEditor.prototype.validate\")\r\n\t\r\n\t            val = new ValidatorDSD();\r\n\t            var valRes = val.validateColumn(this.getColumn());\r\n\t            this.updateValidationUI(valRes);\r\n\t\r\n\t            if (!valRes || valRes.length == 0) return true;\r\n\t\r\n\t            return false;\r\n\t        };\r\n\t        DSDColumnEditor.prototype.updateValidationUI = function (valRes) {\r\n\t            log.info(\"DSDColumnEditor.prototype.updateValidationUI\", this.validator, valRes)\r\n\t\r\n\t            this.$cnt.find('#lTitle').parsley().reset();\r\n\t            this.$cnt.find('#lSubject').parsley().reset();\r\n\t            this.$cnt.find('#lDataType').parsley().reset();\r\n\t            this.$cnt.find('#lDomain').parsley().reset();\r\n\t\r\n\t            if (!valRes) return;\r\n\t            for (var i = 0; i < valRes.length; i++) {\r\n\t                switch (valRes[i].message) {\r\n\t                    case VErrors.TITLE_BLANK:\r\n\t                        this.$cnt.find('#lTitle').parsley().addError('TITLE_BLANK', {message: mlRes[this.lang][VErrors.TITLE_BLANK], assert: 'required', updateClass: true });\r\n\t                        break;\r\n\t                    case VErrors.SUBJECT_EMPTY:\r\n\t                        this.$cnt.find('#lSubject').parsley().addError('SUBJECT_EMPTY', {message: mlRes[this.lang][VErrors.SUBJECT_EMPTY], assert: 'required' });\r\n\t                        break;\r\n\t                    case VErrors.DATATYPE_EMPTY:\r\n\t                        this.$cnt.find('#lDataType').parsley().addError('DATATYPE_EMPTY', {message: mlRes[this.lang][VErrors.DATATYPE_EMPTY], assert: 'required' });\r\n\t                        break;\r\n\t                    case VErrors.CODELIST_EMPTY:\r\n\t                        this.$cnt.find('#lDomain').parsley().addError('CODELIST_EMPTY', {message: mlRes[this.lang][VErrors.CODELIST_EMPTY], assert: 'required' });\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t        DSDColumnEditor.prototype.changed = function () {\r\n\t            return this.mlTitle.changed() || this.mlSupplemental.changed() || this.domainEditor.changed() || this.dynRadioSubj.changed() || this.dynRadioDataType.changed();\r\n\t        };\r\n\t        DSDColumnEditor.prototype._doML = function () {\r\n\t            this.$cnt.find(h.lblTitle).html(mlRes[this.lang]['title']);\r\n\t            this.$cnt.find(h.lblSuppl).html(mlRes[this.lang]['supplemental']);\r\n\t            this.$cnt.find(h.lblSubj).html(mlRes[this.lang]['subject']);\r\n\t            this.$cnt.find(h.lblDataType).html(mlRes[this.lang]['dataType']);\r\n\t            this.$cnt.find(h.lblDomain).html(mlRes[this.lang]['domain']);\r\n\t        };\r\n\t\r\n\t        DSDColumnEditor.prototype.destroy = function () {\r\n\t            this._unbindEvents();\r\n\t            this._detachValidator();\r\n\t            this.mlTitle.destroy();\r\n\t            this.mlSupplemental.destroy();\r\n\t            this.domainEditor.destroy();\r\n\t            this.dynRadioSubj.destroy();\r\n\t            this.dynRadioDataType.destroy();\r\n\t        };\r\n\t\r\n\t        return DSDColumnEditor;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(27)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, Datatypes) {\r\n\t        var defConfig = {};\r\n\t\r\n\t        function DatatypeReader(config) {\r\n\t            this.config = {};\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t            this.datatypes = Datatypes;\r\n\t        };\r\n\t\r\n\t        DatatypeReader.prototype.getDatatypes = function () {\r\n\t            return this.datatypes;\r\n\t        }\r\n\t        DatatypeReader.prototype.getFilteredDatatypes = function (datatypeValues) {\r\n\t            if (!datatypeValues)\r\n\t                return null;\r\n\t            var toRet = [];\r\n\t            var toAdd;\r\n\t            for (var i = 0; i < datatypeValues.length; i++) {\r\n\t                {\r\n\t                    toAdd = this.getDatatype(datatypeValues[i]);\r\n\t                    if (toAdd)\r\n\t                        toRet.push(toAdd);\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t        DatatypeReader.prototype.getDatatype = function (datatype) {\r\n\t            for (var i = 0; i < this.datatypes.length; i++) {\r\n\t                if (this.datatypes[i].value == datatype) {\r\n\t                    return this.datatypes[i];\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        return DatatypeReader;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = [\n\t\t{\n\t\t\t\"value\": \"\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \" \",\n\t\t\t\t\"FR\": \" \"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"code\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Code\",\n\t\t\t\t\"FR\": \"CodeFR\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"customCode\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Custom code\",\n\t\t\t\t\"FR\": \"Custom code\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"date\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Date\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"month\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Month\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"year\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Year\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"number\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Number\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"text\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Text\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"percentage\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Percentage\"\n\t\t\t}\n\t\t}\n\t];\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<table class=\\\"table table-bordered table-nonfluid\\\" id=tblColEditor data-parsley-validate data-validate=parsley> <tbody> <tr><td><label id=lTitle for=txtTitle>_Title</label></td><td id=txtTitle></td></tr> <tr style=display:none><td><label id=lSupplemental for=txtSupplemental>_Supplemental</label></td><td id=txtSupplemental></td></tr> <tr id=trSubj> <td><label id=lSubject for=radioSubj>_Subject</label></td> <td id=tdSubj></td> </tr> <tr id=trDataType> <td><label id=lDataType for=radioDataType>_Data type</label></td> <td id=tdDataType></td> </tr><tr id=trDomain> <td><label id=lDomain for=\\\"\\\">_Domain</label></td> <td id=tdDomainEditor></td> </tr> </tbody> </table> \";\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(30),\r\n\t    __webpack_require__(12),\r\n\t    __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, DynamicRadioHTML, Evts, amplify) {\r\n\t        var defConfig = {};\r\n\t        var h = {\r\n\t            idUID: '#txtUID',\r\n\t            idVersion: '#txtVersion',\r\n\t            idType: '#ddlType'\r\n\t        };\r\n\t        var evts = {\r\n\t            radioChanged: Evts.DYNAMIC_RADIO_CHANGED\r\n\t        };\r\n\t\r\n\t        function DynamicRadio(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t            this.groupName = null;\r\n\t            this.radioSettings;\r\n\t            this.$radioGroup;\r\n\t            this._changed = false;\r\n\t        };\r\n\t\r\n\t        DynamicRadio.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t        };\r\n\t\r\n\t        DynamicRadio.prototype.setRadios = function (group, radioSettings, checkedValue) {\r\n\t            this.groupName = group;\r\n\t            this.radioSettings = radioSettings;\r\n\t            this.$container.html('');\r\n\t            if (!radioSettings)\r\n\t                return;\r\n\t            if (radioSettings.length == 0)\r\n\t                return;\r\n\t            for (var i = 0; i < radioSettings.length; i++) {\r\n\t                this.$container.append(createRadio(group, radioSettings[i], checkedValue));\r\n\t            }\r\n\t\r\n\t            this.$radioGroup = this.$container.find('input[name=' + group + ']:radio');\r\n\t\r\n\t            this._bindEvents();\r\n\t        };\r\n\t\r\n\t        var createRadio = function (group, radioSetting, checkedValue) {\r\n\t            var radioId = createRadioId(group, radioSetting.value);\r\n\t            var $toRet = $(DynamicRadioHTML);\r\n\t            $toRet.find('label').text(radioSetting.text);\r\n\t            $toRet.find('label').attr('for', radioId);\r\n\t            $toRet.find('input').val(radioSetting.value);\r\n\t            $toRet.find('input').attr('name', group);\r\n\t            $toRet.find('input').attr('id', radioId);\r\n\t            $toRet.prop('required', true);\r\n\t            if (checkedValue && radioSetting.value == checkedValue)\r\n\t                $toRet.find('input').attr('checked', 'checked');\r\n\t            return $toRet;\r\n\t        };\r\n\t        var createRadioId = function (groupN, value) {\r\n\t            return \"rd\" + groupN + \"_\" + value;\r\n\t        };\r\n\t\r\n\t        DynamicRadio.prototype.get = function () {\r\n\t            if (!this.$radioGroup)\r\n\t                return null;\r\n\t            if (!this.$radioGroup.filter(':checked'))\r\n\t                return null;\r\n\t            return this.$radioGroup.filter(':checked').val();\r\n\t        };\r\n\t\r\n\t        DynamicRadio.prototype.set = function (toSet) {\r\n\t            this.reset();\r\n\t            if (!toSet)\r\n\t                return;\r\n\t            var r = this.$container.find(\"#\" + createRadioId(this.groupName, toSet));\r\n\t            r.prop('checked', true);\r\n\t            amplify.publish(evts.radioChanged, toSet, this.groupName);\r\n\t        };\r\n\t        DynamicRadio.prototype.reset = function () {\r\n\t            if (!this.$radioGroup)\r\n\t                return;\r\n\t            this.$radioGroup.removeAttr('checked');\r\n\t            this._changed = false;\r\n\t        };\r\n\t        DynamicRadio.prototype._bindEvents = function () {\r\n\t            var me = this;\r\n\t            $(this.$radioGroup.on('change', function () {\r\n\t                var v = me.$container.find('input[name=' + me.groupName + ']:checked').val();\r\n\t                amplify.publish(evts.radioChanged, v, me.groupName);\r\n\t                me._changed = true;\r\n\t            }));\r\n\t        };\r\n\t        DynamicRadio.prototype._unbindEvents = function () {\r\n\t            if (this.$radioGroup)\r\n\t                this.$radioGroup.off('change');\r\n\t        };\r\n\t\r\n\t        DynamicRadio.prototype.changed = function () {\r\n\t            return this._changed;\r\n\t        };\r\n\t\r\n\t        DynamicRadio.prototype.destroy = function () {\r\n\t            this._unbindEvents();\r\n\t        };\r\n\t\r\n\t        return DynamicRadio;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<span><input type=radio name=\\\"\\\" value=\\\"\\\" style=display:none /><label></label></span>\";\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//TODO: the changed function must be done\r\n\t\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(32),\r\n\t    __webpack_require__(33),\r\n\t    //'components/DSDEditor/DSDColumnEditor/js/comp/domainEditors/DatesRange',\r\n\t    __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, DomainEditorHTML, CodelistSelector, amplify) {\r\n\t        var defConfig = {};\r\n\t        var h = {\r\n\t            idNoDataType: '#domEdit_noDatatype',\r\n\t            idNoDomain: '#domEdit_noDomain',\r\n\t            idEditor: '#domEdit_editor'\r\n\t        };\r\n\t        var evts = {\r\n\t        };\r\n\t\r\n\t        var MODES = {\r\n\t            code: 'code',\r\n\t            year: 'year',\r\n\t            month: 'month',\r\n\t            date: 'date',\r\n\t            customCode: 'customCode'\r\n\t        };\r\n\t\r\n\t        function DomainEditor(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t            this.mode = '';\r\n\t            this.$divNoDatatype = null;\r\n\t            this.$divNoDomain = null;\r\n\t            this.$divDomainEditor = null;\r\n\t\r\n\t            this.codelistSelector = null;\r\n\t            this._changed = false;\r\n\t\r\n\t            //console.log(\"DomainEditor\", this.config)\r\n\t        };\r\n\t\r\n\t        DomainEditor.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t\r\n\t            this.$container.html(DomainEditorHTML);\r\n\t            this.$divNoDatatype = this.$container.find(h.idNoDataType);\r\n\t            this.$divNoDomain = this.$container.find(h.idNoDomain);\r\n\t            this.$divDomainEditor = this.$container.find(h.idEditor);\r\n\t            this.$divNoDatatype.show();\r\n\t            this.$divNoDomain.hide();\r\n\t            this.$divDomainEditor.hide();\r\n\t            this._bindEvents();\r\n\t        };\r\n\t        DomainEditor.prototype.set = function (mode, subject, domain) {\r\n\t            //this.reset();\r\n\t            this._changed = false;\r\n\t            this.setMode(mode, subject);\r\n\t            switch (this.mode) {\r\n\t                case MODES.code:\r\n\t                    this.codelistSelector.set(subject, domain.codes);\r\n\t                    break;\r\n\t                case MODES.year:\r\n\t                case MODES.month:\r\n\t                case MODES.date:\r\n\t                    //this.datesSelector.setRange(domain.period);\r\n\t                    break;\r\n\t            }\r\n\t        };\r\n\t        DomainEditor.prototype.get = function () {\r\n\t            switch (this.mode) {\r\n\t                case MODES.code:\r\n\t                    return { codes: [this.codelistSelector.get()] };\r\n\t                    break;\r\n\t                case MODES.year:\r\n\t                case MODES.month:\r\n\t                case MODES.date:\r\n\t                    //var rng = this.datesSelector.getRange();\r\n\t                    //if (!rng) return null;\r\n\t                    //return { period: rng };\r\n\t                    break;\r\n\t            }\r\n\t        };\r\n\t        DomainEditor.prototype.reset = function () {\r\n\t            this.setMode('');\r\n\t            this._changed = false;\r\n\t        };\r\n\t\r\n\t        DomainEditor.prototype.setMode = function (mode, subject) {\r\n\t            //this.mode = mode;\r\n\t            if (this.mode == mode)\r\n\t                return;\r\n\t            this.mode = mode;\r\n\t            this.$divDomainEditor.empty();\r\n\t            this.$divDomainEditor.hide();\r\n\t            this.$divNoDomain.hide();\r\n\t            this.$divNoDatatype.hide();\r\n\t\r\n\t            //Domain handler is changing destroy the old one\r\n\t            if (this.codelistSelector)\r\n\t                this.codelistSelector.destroy();\r\n\t            this.codelistSelector = null;\r\n\t\r\n\t            switch (mode) {\r\n\t                case '':\r\n\t                    this.$divNoDatatype.show();\r\n\t                    break;\r\n\t                case MODES.code:\r\n\t                    this.$divDomainEditor.show();\r\n\t                    this.codelistSelector = new CodelistSelector(this.config);\r\n\t                    this.codelistSelector.render(this.$divDomainEditor);\r\n\t                    this.codelistSelector.setSubject(subject);\r\n\t                    //this.codelistSelector.setCodelists(this.cLists);\r\n\t                    break;\r\n\t                case MODES.year:\r\n\t                case MODES.month:\r\n\t                case MODES.date:\r\n\t                    this.$divDomainEditor.show();\r\n\t                    //this.datesSelector = new DatesRangeSelector();\r\n\t                    //this.datesSelector.render(this.$divDomainEditor);\r\n\t                    //this.datesSelector.setMode(mode);\r\n\t                    break;\r\n\t                case MODES.customCode:\r\n\t                    //this.$divDomainEditor.show();\r\n\t                    //this.customCodeSelector = new CustomCodesSelection();\r\n\t                    //this.customCodeSelector.render(this.$divDomainEditor);\r\n\t                    break;\r\n\t                default:\r\n\t                    this.$divNoDomain.show();\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        DomainEditor.prototype._bindEvents = function () { };\r\n\t        DomainEditor.prototype._unbindEvents = function () { };\r\n\t\r\n\t        DomainEditor.prototype.changed = function () { return this._changed;};\r\n\t        DomainEditor.prototype.destroy = function () {\r\n\t            if (this.codelistSelector)\r\n\t                this.codelistSelector.destroy();\r\n\t            this._unbindEvents();\r\n\t        };\r\n\t\r\n\t        return DomainEditor;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=domEdit_noDatatype>Select a data type</div> <div id=domEdit_noDomain>No limit for this data type</div> <div id=domEdit_editor></div>\";\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(34),\r\n\t    __webpack_require__(19),\r\n\t    __webpack_require__(12),\r\n\t    __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, CodelistSelectorHTML, CodelistConfigReader, Evts, amplify) {\r\n\t        var defConfig = {};\r\n\t        var h = {\r\n\t            idCodesDDL: '#clSelDDL',\r\n\t        };\r\n\t        var e = {\r\n\t            ddlChange: Evts.CODELIST_SELECTOR_CHANGED\r\n\t        };\r\n\t\r\n\t        var lang = 'EN';\r\n\t\r\n\t        function CodelistSelector(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, config, defConfig);\r\n\t\r\n\t            this.clReader = null;\r\n\t            this.tmpVal = \"\";\r\n\t            this.tmpSubj = \"\";\r\n\t            this.loaded = false;\r\n\t\r\n\t            //console.log(\"CodelistSelector\", this.config);\r\n\t        };\r\n\t\r\n\t        CodelistSelector.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t            this.$container.html(CodelistSelectorHTML);\r\n\t\r\n\t            this.$clDDl = this.$container.find(h.idCodesDDL);\r\n\t\r\n\t            this._bindEvents();\r\n\t\r\n\t            var me = this;\r\n\t            this.clReader = new CodelistConfigReader(this.config, function () { me._clLoaded(); });\r\n\t        };\r\n\t\r\n\t        CodelistSelector.prototype._clLoaded = function () {\r\n\t            this.loaded = true;\r\n\t            if (this.tmpVal != \"\") {\r\n\t                this.set(this.tmpSubj, this.tmpVal);\r\n\t                return;\r\n\t            }\r\n\t            if (this.tmpSubj != \"\") {\r\n\t                this.setSubject(this.tmpSubj);\r\n\t            }\r\n\t        };\r\n\t\r\n\t        CodelistSelector.prototype.setSubject = function (subj) {\r\n\t            if (!this.loaded) {\r\n\t                this.tmpSubj = subj;\r\n\t                return;\r\n\t            }\r\n\t\r\n\t            var cl = this.clReader.getFilteredCodelists(subj);\r\n\t            var selVal = this.$clDDl.val();\r\n\t            this.$clDDl.find('option').remove();\r\n\t\r\n\t            if (!cl)\r\n\t                return;\r\n\t\r\n\t            this.$clDDl.append($('<option>', { value: '', text: '' }));\r\n\t            for (var i = 0; i < cl.length; i++) {\r\n\t                this.$clDDl.append($('<option>', { value: cl[i].value, text: cl[i].text[lang] }));\r\n\t            }\r\n\t            if (cl.length == 1)//if there is just one option autoselect it\r\n\t                this.$clDDl.val(cl[0].value);\r\n\t            else if (selVal)//tries to reselect what was selected\r\n\t                this.$clDDl.val(selected);\r\n\t            //this.$clDDl.selectmenu('refresh', true); //Force an autorefresh or the auto select will not show\r\n\t        };\r\n\t\r\n\t        CodelistSelector.prototype.reset = function () {\r\n\t            this.$clDDl.find('option').remove();\r\n\t        }\r\n\t\r\n\t        CodelistSelector.prototype.set = function (subject, val) {\r\n\t            if (!this.loaded) {\r\n\t                this.tmpSubj = subject;\r\n\t                this.tmpVal = val;\r\n\t                return;\r\n\t            }\r\n\t            this.setSubject(subject);\r\n\t            if (!val || val.length == 0) {\r\n\t                this.$clDDl.val('');\r\n\t                return;\r\n\t            }\r\n\t            //TODO: Codelists can be more than one (make this multielement)\r\n\t            var toSet = val[0].idCodeList;\r\n\t            if (val[0].version)\r\n\t                toSet = toSet + \"|\" + val[0].version;\r\n\t            this.$clDDl.val(toSet);\r\n\t            //this.$clDDl.selectmenu('refresh', true); //Force an autorefresh or the auto select will not show\r\n\t        };\r\n\t        CodelistSelector.prototype.get = function () {\r\n\t            var selVal = this.$clDDl.val();\r\n\t            if (selVal == '')\r\n\t                return null;\r\n\t            var split = selVal.split('|');\r\n\t            if (split[1])\r\n\t                return { idCodeList: split[0], version: split[1] };\r\n\t            else\r\n\t                return { idCodeList: split[0] };\r\n\t        };\r\n\t        CodelistSelector.prototype._bindEvents = function () {\r\n\t            var me = this;\r\n\t            this.$clDDl.on('change', function (d) {\r\n\t                amplify.publish(e.ddlChange, me.$clDDl.val());\r\n\t            });\r\n\t        };\r\n\t        CodelistSelector.prototype._unbindEvents = function () {\r\n\t            this.$clDDl.off('change');\r\n\t        };\r\n\t        CodelistSelector.prototype.destroy = function () {\r\n\t            this._unbindEvents();\r\n\t        };\r\n\t\r\n\t        return CodelistSelector;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<select id=clSelDDL class=form-control></select>\";\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(36)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, ColumnEditorCfg) {\r\n\t        var defConfig = {};\r\n\t\r\n\t        function ColumnEditorReader(config) {\r\n\t            this.config = {};\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t            this.columnECfg = ColumnEditorCfg;\r\n\t        };\r\n\t\r\n\t        ColumnEditorReader.prototype.getColumnEditorCfg = function () {\r\n\t            return this.columnECfg;\r\n\t        };\r\n\t        ColumnEditorReader.prototype.getColumnTypeSubjects = function (columnType) {\r\n\t            if (!this.columnECfg[columnType])\r\n\t                return null;\r\n\t            var toRet = [];\r\n\t            for (var i = 0; i < this.columnECfg[columnType].length; i++)\r\n\t                toRet.push(this.columnECfg[columnType][i].subject);\r\n\t            return toRet;\r\n\t        };\r\n\t\r\n\t        ColumnEditorReader.prototype.getSubjectDatatypes = function (columnType, subject) {\r\n\t            if (!this.columnECfg[columnType])\r\n\t                return null;\r\n\t\r\n\t            for (var i = 0; i < this.columnECfg[columnType].length; i++) {\r\n\t                if (this.columnECfg[columnType][i].subject == subject) {\r\n\t                    return this.columnECfg[columnType][i].datatypes;\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        };\r\n\t        return ColumnEditorReader;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"dimension\": [\n\t\t\t{\n\t\t\t\t\"subject\": \"item\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"indicator\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"gender\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"residence\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"food\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"sector\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"fieldManagement\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"agriculturalPopulation\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"census\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"time\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"year\",\n\t\t\t\t\t\"month\",\n\t\t\t\t\t\"date\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"geo\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"undefined\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\",\n\t\t\t\t\t\"year\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"value\": [\n\t\t\t{\n\t\t\t\t\"subject\": \"value\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"number\",\n\t\t\t\t\t\"text\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"other\": [\n\t\t\t{\n\t\t\t\t\"subject\": \"flag\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\",\n\t\t\t\t\t\"text\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"subject\": \"um\",\n\t\t\t\t\"datatypes\": [\n\t\t\t\t\t\"code\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(38)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, Subjects) {\r\n\t        var defConfig = {};\r\n\t\r\n\t        function SubjectReader(config) {\r\n\t            this.config = {};\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t            this.subjs = Subjects;\r\n\t        };\r\n\t\r\n\t        SubjectReader.prototype.getSubjects = function () {\r\n\t            return this.subjs;\r\n\t        }\r\n\t        SubjectReader.prototype.getFilteredSubjects = function (subjsValues) {\r\n\t            if (!subjsValues)\r\n\t                return null;\r\n\t            var toRet = [];\r\n\t            var toAdd;\r\n\t            for (var i = 0; i < subjsValues.length; i++) {\r\n\t                {\r\n\t                    toAdd = this.getSubject(subjsValues[i]);\r\n\t                    if (toAdd)\r\n\t                        toRet.push(toAdd);\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t        SubjectReader.prototype.getSubject = function (subj) {\r\n\t            for (var i = 0; i < this.subjs.length; i++) {\r\n\t                if (this.subjs[i].value == subj)\r\n\t                    return this.subjs[i];\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        return SubjectReader;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\tmodule.exports = [\n\t\t{\n\t\t\t\"value\": \"item\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Item\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"item\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"indicator\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Indicator\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"indicator\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"gender\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Gender\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"gender\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"residence\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Residence\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"residence\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"food\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Food\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"food\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"sector\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Sector\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"sector\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"fieldManagement\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Field Management\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"fieldManagement\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"agriculturalPopulation\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Agricultural\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"agriculturalPopulation\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"census\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Census\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"census\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"time\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Time\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"geo\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Geo\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"geo\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"flag\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Flag\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"flag\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"value\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"Value\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"value\": \"um\",\n\t\t\t\"text\": {\n\t\t\t\t\"EN\": \"UM\"\n\t\t\t},\n\t\t\t\"codelistSubject\": \"um\"\n\t\t}\n\t];\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(5),\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(40)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function (log, $, MLInputHTML) {\r\n\t        var defConfig = { langs: [\"EN\"] };\r\n\t        var line = '<tr><td>%lCode%</td><td><input type=\"text\" id=\"%idlCode%\" class=\"form-control\" /></td></tr>';\r\n\t        var idlCode = \"mlTD_\";\r\n\t\r\n\t        var h = {\r\n\t            idTblMLInput: '#tblMLInput',\r\n\t        };\r\n\t\r\n\t        function MLInput(config) {\r\n\t            this.config = {};\r\n\t            this.$container = null;\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t            this.$tblMLInput = null;\r\n\t            this.txt = [];\r\n\t\r\n\t            this._changed = false;\r\n\t        };\r\n\t\r\n\t        MLInput.prototype.render = function (cnt, config) {\r\n\t            $.extend(true, this.config, config);\r\n\t            this.$container = cnt;\r\n\t            this.$container.html(MLInputHTML);\r\n\t\r\n\t            this.$tblMLInput = this.$container.find(h.idTblMLInput);\r\n\t\r\n\t            this._create(this.config.langs);\r\n\t            this.bindEvents();\r\n\t        };\r\n\t\r\n\t        MLInput.prototype._create = function (lCodes) {\r\n\t\r\n\t            if (!lCodes)\r\n\t                return \"\";\r\n\t            var toAdd = \"\";\r\n\t            for (var i = 0; i < lCodes.length; i++)\r\n\t                toAdd += createLine(lCodes[i]);\r\n\t            this.$tblMLInput.html(toAdd);\r\n\t            this.txt = [];\r\n\t            for (i = 0; i < lCodes.length; i++)\r\n\t                this.txt.push(this.$tblMLInput.find(\"#\" + idlCode + \"\" + lCodes[i]));\r\n\t        }\r\n\t\r\n\t        function createLine(lCode) {\r\n\t            var toRet = line.replace(\"%lCode%\", lCode);\r\n\t            toRet = toRet.replace(\"%idlCode%\", idlCode + \"\" + lCode);\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        MLInput.prototype.set = function (val) {\r\n\t\r\n\t            this.reset();\r\n\t            if (!val)\r\n\t                return;\r\n\t            for (var i = 0; i < this.config.langs.length; i++) {\r\n\t                if (val[this.config.langs[i]]) {\r\n\t                    this.txt[i].val(val[this.config.langs[i]]);\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t        MLInput.prototype.get = function () {\r\n\t            if (!this.txt)\r\n\t                return null;\r\n\t            var toRet = {};\r\n\t            var v = \"\";\r\n\t            for (var i = 0; i < this.config.langs.length; i++) {\r\n\t                v = this.txt[i].val().trim();\r\n\t                if (v)\r\n\t                    toRet[this.config.langs[i].toUpperCase()] = v;\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t        MLInput.prototype.reset = function () {\r\n\t            if (!this.txt)\r\n\t                return;\r\n\t            for (var i = 0; i < this.txt.length; i++) {\r\n\t                this.txt[i].val('');\r\n\t            }\r\n\t            this._changed = false;\r\n\t        };\r\n\t        MLInput.prototype.isEmpty = function () {\r\n\t            var v = this.get();\r\n\t            if ($.isEmptyObject(v))\r\n\t                return true;\r\n\t            return false;\r\n\t        };\r\n\t        MLInput.prototype.bindEvents = function () {\r\n\t            if (!this.txt)\r\n\t                return;\r\n\t            var me = this;\r\n\t            for (var i = 0; i < this.txt.length; i++) {\r\n\t                this.txt[i].on('keyup', function () { me._changed = true;})\r\n\t            }\r\n\t        };\r\n\t        MLInput.prototype.unbindEvents = function () {\r\n\t            if (!this.txt)\r\n\t                return;\r\n\t            for (var i = 0; i < this.txt.length; i++) {\r\n\t                this.txt[i].off('keyup');\r\n\t            }\r\n\t        };\r\n\t        MLInput.prototype.changed = function () { return this._changed; };\r\n\t        MLInput.prototype.destroy = function () { this.unbindEvents()};\r\n\t        return MLInput;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<table> <tbody id=tblMLInput> </tbody> </table> \";\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    var ColumnIDGenerator = function () {\r\n\t    };\r\n\t    ColumnIDGenerator.prototype.generate = function (columns, newCol) {\r\n\t        var type = \"OTHER\";\r\n\t        if (newCol.key)\r\n\t            type = \"DIMENSION\";\r\n\t        else if (newCol.subject == 'value')\r\n\t            type = \"VALUE\";\r\n\t        return this._generate(columns, type);\r\n\t    }\r\n\t\r\n\t    ColumnIDGenerator.prototype._generate = function (columns, type) {\r\n\t        if (!columns)\r\n\t            return \"\";\r\n\t        var id = type.toUpperCase();\r\n\t        var nbr = 0;\r\n\t\r\n\t        var found = true;\r\n\t        while (found) {\r\n\t            found = false;\r\n\t            var newId = id + \"\" + nbr;\r\n\t            for (var i = 0; i < columns.length; i++) {\r\n\t                if (columns[i].id == newId) {\r\n\t                    found = true;\r\n\t                    nbr++;\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        \r\n\t        return id + \"\" + nbr;\r\n\t    }\r\n\t\r\n\t    \r\n\t    return ColumnIDGenerator;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }\n/******/ ])});;\n\n\n/** WEBPACK FOOTER **\n ** fenix-ui-DSDEditor.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2296bf36e62f88a28671\n **/","define([\r\n    'jquery',\r\n    './DSDEditor/DSDEditor'\r\n], function ($, DSDEditor) {\r\n\r\n    var defConfig = {};\r\n    var cfg = {};\r\n\r\n    function init(containerID, config, callB) {\r\n        $.extend(true, cfg, defConfig, config);\r\n        this.DSDE = new DSDEditor(cfg);\r\n        this.DSDE.render($(containerID), cfg, callB);\r\n    }\r\n\r\n    function set(cols) { this.DSDE.set(cols); }\r\n    function get() { return this.DSDE.get(); }\r\n    function validate() { return this.DSDE.validate(); }\r\n\r\n    function editable(editable) {\r\n        this.DSDE.editable(editable);\r\n    }\r\n\r\n    function reset() { this.DSDE.reset(); }\r\n    function destroy() { this.DSDE.destroy(); }\r\n    function hasChanged() { return this.DSDE.hasChanged(); }\r\n\r\n    return {\r\n        init: init,\r\n        set: set,\r\n        get: get,\r\n        validate: validate,\r\n        editable: editable,\r\n        reset: reset,\r\n        destroy: destroy,\r\n        hasChanged: hasChanged\r\n    }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","define(['jquery',\r\n    'loglevel',\r\n    './html/DSDEditor.html',\r\n    './DSDDisplay/js/DSDDisplay',\r\n    './DSDColumnEditor/js/DSDColumnEditor',\r\n    './ColumnIDGenerator',\r\n    './DSDColumnEditor/js/Events',\r\n    './validators/Validator_DSD',\r\n    './validators/Validator_DSD_Errors',\r\n    '../../config/config',\r\n    '../../config/config-default',\r\n    '../../nls/labels',\r\n    'amplify-pubsub'\r\n],\r\n\r\n    function ($, log, DSDEditorHTML, DSDDisplay, DSDColumnEditor, ColumnIDGenerator, Evts, ValidatorDSD, VErrors, C, CD, MLRes, amplify) {\r\n        var defConfig = {};\r\n        var htmlIDs = {\r\n            divDSD: \"#divDSD\",\r\n            divColEditor: \"#divColEditor\",\r\n            divColEditorCnt: \"#divColEditorCnt\",\r\n            btnAddDimension: '#btnAddDimension',\r\n            btnAddValue: '#btnAddValue',\r\n            btnAddOther: '#btnAddOther',\r\n            btnColEditorOk: '#btnColEditorOk',\r\n            btnColEditorCancel: '#btnColEditorCancel'\r\n        };\r\n        var colTypes = {\r\n            dimension: 'dimension',\r\n            value: 'value',\r\n            other: 'other'\r\n        };\r\n        var e = {\r\n            DSDEDITOR_TO_COLUMN_EDITOR: 'fx.DSDEditor.toColumnEditor',\r\n            DSDEDITOR_TO_COLUMN_SUMMARY: 'fx.DSDEditor.toColumnSummary'\r\n        };\r\n\r\n        function DSDEditor(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n\r\n            this.lang = this.config.lang.toLowerCase();\r\n\r\n            this.$divDSDDisplay;\r\n            this.$divColEditor;\r\n\r\n            this.dsd = [];\r\n            //this.addDatasourceAndContextSys();\r\n\r\n            this.DSDDisplay;\r\n            this.colEditor;\r\n            this.changed = false;\r\n        };\r\n\r\n        DSDEditor.prototype.render = function (cnt, config, callB) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n            this.$container.html(DSDEditorHTML);\r\n\r\n            this.$divDSDDisplay = this.$container.find(htmlIDs.divDSD);\r\n            this.$divColEditor = this.$container.find(htmlIDs.divColEditor);\r\n\r\n            this.DSDDisplay = new DSDDisplay(this.config);\r\n            this.DSDDisplay.render(this.$divDSDDisplay);\r\n\r\n            this.colEditor = new DSDColumnEditor(this.config);\r\n            var divColEditorCnt = this.$container.find(htmlIDs.divColEditorCnt);\r\n            this.colEditor.render(divColEditorCnt);\r\n            this.$divColEditor.hide();\r\n\r\n            this._bindEvents();\r\n\r\n            log.info(\"DSDEditor init with \",this.config);\r\n\r\n            if (callB) callB();\r\n        };\r\n\r\n        //Sets the dsd\r\n        DSDEditor.prototype.set = function (dsd) {\r\n            log.info('DSD Set', dsd);\r\n            this.dsd = dsd;\r\n            this.updateDSDView();\r\n        };\r\n        //gets the DSD\r\n        DSDEditor.prototype.get = function () {\r\n            return this.dsd;\r\n        };\r\n\r\n        //switches the panels' visibility\r\n        DSDEditor.prototype.switchVisibility = function (divID) {\r\n            if (divID == htmlIDs.divColEditor) {\r\n                this.$divDSDDisplay.hide();\r\n                this.$divColEditor.show();\r\n                amplify.publish(e.DSDEDITOR_TO_COLUMN_EDITOR);\r\n            }\r\n            else if (divID == htmlIDs.divDSD) {\r\n                this.$divColEditor.hide();\r\n                this.$divDSDDisplay.show();\r\n                amplify.publish(e.DSDEDITOR_TO_COLUMN_SUMMARY);\r\n            }\r\n        };\r\n        //Add a new column->switch to col view, sets the view mode\r\n        DSDEditor.prototype.addColumn = function (colType) {\r\n            this.switchVisibility(htmlIDs.divColEditor);\r\n            this.colEditor.newColumn();\r\n            this.colEditor.setColumnEditorType(colType);\r\n\r\n            //this.colEditor.setEditMode({subject:false,domain:false,datatype:false});\r\n        };\r\n        //Edit a columns\r\n        DSDEditor.prototype.editColumn = function (col) {\r\n            this.switchVisibility(htmlIDs.divColEditor);\r\n            this.colEditor.setColumn(col);\r\n        };\r\n        //Called when the user has finished editing a columns\r\n        DSDEditor.prototype.colEditDone = function () {\r\n            var colToAdd = this.colEditor.getColumn();\r\n            if (!this.dsd)\r\n                this.dsd = [];\r\n\r\n            //create a new id\r\n            if (colToAdd.id == \"\") {\r\n                colToAdd.id = new ColumnIDGenerator().generate(this.dsd, colToAdd);\r\n            }\r\n\r\n            var idx = getColumnIndexById(this.dsd, colToAdd.id);\r\n\r\n            log.info(idx, this.dsd, typeof (this.dsd), colToAdd);\r\n\r\n            if (idx == -1)\r\n                this.dsd.push(colToAdd);\r\n            else\r\n                this.dsd[idx] = colToAdd;\r\n\r\n            this._sortColumnsByType();\r\n            this.updateDSDView();\r\n            this.changed = true;\r\n        };\r\n\r\n        DSDEditor.prototype._sortColumnsByType = function () {\r\n            this.dsd.sort(function (a, b) {\r\n                //both key, keep the order\r\n                if (a.key && b.key) return 0;\r\n                if (a.key) return -1; //a is key, a goes first\r\n                if (b.key) return 1;\r\n                //two value columns are not allowed at the moment, for the future...\r\n                if (a.subject == 'value' && b.subject == 'value')\r\n                    return 0;\r\n                if (a.subject == 'value')\r\n                    return -1;\r\n                if (b.subject == 'value')\r\n                    return 1;\r\n                return 0;\r\n            });\r\n        };\r\n        //Refreshes the DSD view\r\n        DSDEditor.prototype.updateDSDView = function () {\r\n            this.DSDDisplay.setCols(this.dsd);\r\n        };\r\n\r\n        DSDEditor.prototype._colAddClick = function (evtId) {\r\n            if (evtId == 'addDim') {\r\n                this.addColumn(colTypes.dimension);\r\n            }\r\n            else if (evtId == 'addVal') {\r\n                this.addColumn(colTypes.value);\r\n            }\r\n            else if (evtId == 'addOther') {\r\n                this.addColumn(colTypes.other);\r\n            }\r\n        };\r\n        DSDEditor.prototype.reset = function () {\r\n            this.initDSD();\r\n            this.updateDSDView();\r\n            this.changed = false;\r\n        };\r\n        DSDEditor.prototype.hasChanged = function () {\r\n            return this.changed;\r\n        };\r\n        DSDEditor.prototype._bindEvents = function () {\r\n            var me = this;\r\n            amplify.subscribe(Evts.COLUMN_CLICK_ADD, this, me._colAddClick);\r\n\r\n            this.$container.find(htmlIDs.btnColEditorOk).on('click', function () {\r\n                var val = me.colEditor.validate();\r\n                if (!val) return;\r\n                me.colEditDone();\r\n                me.switchVisibility(htmlIDs.divDSD);\r\n            });\r\n            this.$container.find(htmlIDs.btnColEditorCancel).on('click', function () {\r\n                if (me.colEditor.changed()) {\r\n                    if (!confirm(MLRes[me.lang]['unsavedChanges']))\r\n                        return;\r\n                }\r\n\r\n                me.colEditor.reset();\r\n                me.switchVisibility(htmlIDs.divDSD);\r\n            });\r\n\r\n            amplify.subscribe(Evts.COLUMN_CLICK_EDIT, this, me._colDisplayEditClicked);\r\n            amplify.subscribe(Evts.COLUMN_CLICK_DELETE, this, me._colDisplayDeleteClicked);\r\n        };\r\n        DSDEditor.prototype._unbindEvents = function () {\r\n            amplify.unsubscribe(Evts.COLUMN_CLICK_ADD, this._colAddClick);\r\n            this.$container.find(htmlIDs.btnColEditorOk).off('click');\r\n            this.$container.find(htmlIDs.btnColEditorCancel).off('click');\r\n\r\n            amplify.unsubscribe(Evts.COLUMN_CLICK_EDIT, this._colDisplayEditClicked);\r\n            amplify.unsubscribe(Evts.COLUMN_CLICK_DELETE, this._colDisplayDeleteClicked);\r\n        };\r\n        DSDEditor.prototype.destroy = function () {\r\n            this._unbindEvents();\r\n            this.DSDDisplay.destroy();\r\n            this.colEditor.destroy();\r\n        };\r\n        //Edit col\r\n        DSDEditor.prototype._colDisplayEditClicked = function (colId) {\r\n            var toEdit = getColumnById(this.dsd, colId);\r\n            this.editColumn(toEdit);\r\n        };\r\n        //Delete a column\r\n        DSDEditor.prototype._colDisplayDeleteClicked = function (colId) {\r\n            if (!confirm(MLRes[this.lang]['areYouSure'])) return false;\r\n            var colIdx = getColumnIndexById(this.dsd, colId);\r\n            if (colIdx != -1) this.dsd.splice(colIdx, 1);\r\n            this.updateDSDView();\r\n            this.changed = true;\r\n        };\r\n        DSDEditor.prototype.editable = function (editable) {\r\n            //console.log(\"DSDEditor.editable\");\r\n            if (editable)\r\n                this.colEditor.setEditMode({ subject: true, domain: true, datatype: true });\r\n            else\r\n                this.colEditor.setEditMode({ subject: false, domain: false, datatype: false });\r\n            this.DSDDisplay.isEditable(editable);\r\n        };\r\n        //Validation\r\n        DSDEditor.prototype.validate = function () {\r\n            var val = new ValidatorDSD();\r\n            var valRes = val.validateColumns(this.get());\r\n            this.updateValidationUI(valRes);\r\n            if (!valRes || valRes.length == 0)\r\n                return true;\r\n            return false;\r\n        };\r\n        DSDEditor.prototype.isValid = function () {\r\n            var val = new ValidatorDSD();\r\n            var valRes = val.validateColumns(this.get());\r\n            if (!valRes || valRes.length == 0)\r\n                return true;\r\n            return false;\r\n        };\r\n        DSDEditor.prototype.updateValidationUI = function (valRes) {\r\n            if (!valRes)  return;\r\n            for (var i = 0; i < valRes.length; i++)\r\n                log.warn(valRes[i].message);\r\n                // TODO: Add Notification in a Centralized Fashon\r\n                // Noti.showError(\"Error\", valRes[i].message);\r\n        };\r\n        //Utils\r\n        function getColumnIndexById(cols, id) {\r\n            if (!cols)\r\n                return -1;\r\n            for (var i = 0; i < cols.length; i++)\r\n                if (cols[i].id == id)\r\n                    return i;\r\n            return -1;\r\n        };\r\n        function getColumnById(cols, id) {\r\n            var idx = getColumnIndexById(cols, id);\r\n            if (idx == -1)\r\n                return null;\r\n            return cols[idx];\r\n        };\r\n\r\n\r\n        return DSDEditor;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDEditor.js\n ** module id = 3\n ** module chunks = 0\n **/","define([\r\n    'jquery',\r\n    'loglevel',\r\n    './Validator_DSD_Errors'\r\n    ],function ($, log, VE) {\r\n        var defConfig = {\r\n            allowedKeyDataTypes: ['code', 'customCode', 'date', 'month', 'year']\r\n        };\r\n        var eLevels = {\r\n            ERROR: 'error'\r\n        };\r\n        function Validator_DSD(config) {\r\n            log.info(\"Validator_DSD\")\r\n            this.config = {};\r\n            $.extend(true, this.config, defConfig, config);\r\n        };\r\n\r\n        //COLUMN\r\n        Validator_DSD.prototype.validateColumn = function (col) {\r\n            var toRet = [];\r\n            if (!col) {\r\n                toRet.push({ level: eLevels.ERROR, message: VE.NULL_COLUMN });\r\n                return toRet;\r\n            }\r\n\r\n            ArrConcat(toRet, validateTitle(col.title));\r\n            ArrConcat(toRet, validateDimension(col, this.config.allowedKeyDataTypes));\r\n            ArrConcat(toRet, validateSubject(col));\r\n            ArrConcat(toRet, validateDatatype(col));\r\n            ArrConcat(toRet, validateDomain(col));\r\n\r\n            return toRet;\r\n        };\r\n\r\n        function validateTitle(toVal) {\r\n            if ($.isEmptyObject(toVal))\r\n                return { field: 'title', level: eLevels.ERROR, message: VE.TITLE_BLANK };\r\n            return null;\r\n        }\r\n        function validateDimension(toVal, allowedDatatypes) {\r\n            if (!toVal.key)//Not a Dimension\r\n                return null;\r\n            if (!toVal.dataType)//Datatype must be defined but it will be checked in the checkDatatype\r\n                return null;\r\n            for (var i = 0; i < allowedDatatypes.length; i++)\r\n                if (toVal.dataType == allowedDatatypes[i])\r\n                    return null;//ok\r\n            return { field: 'dimension', level: eLevels.ERROR, message: VE.DIMENSION_DATATYPE_ERROR };\r\n        }\r\n        function validateSubject(toVal) {\r\n            if (!toVal.key)\r\n                return null;\r\n            if (!toVal.subject)\r\n                return { field: 'subject', level: eLevels.ERROR, message: VE.SUBJECT_EMPTY };\r\n        }\r\n        function validateDatatype(toVal) {\r\n            if (!toVal.dataType)\r\n                return { field: 'dataType', level: eLevels.ERROR, message: VE.DATATYPE_EMPTY };\r\n        }\r\n        function validateDomain(toVal) {\r\n            if (!toVal.dataType) //dataType is already checked in another validation\r\n                return null;\r\n            if (toVal.dataType == 'code') {\r\n                //Make it multielement!\r\n                if (!toVal.domain || !toVal.domain.codes || !toVal.domain.codes[0] || !toVal.domain.codes[0].idCodeList)\r\n                    return { field: 'domain', level: eLevels.ERROR, message: VE.CODELIST_EMPTY };\r\n            }\r\n        }\r\n        //END COLUMN\r\n\r\n        //Validate all the columns and the structure (duplicate IDs, at least 2 cols...)\r\n        Validator_DSD.prototype.validateColumns = function (cols) {\r\n            var toRet = [];\r\n            var valStructure = validateStructure(cols);\r\n        //    var duplicateSubj = checkDuplicateSubject(cols);\r\n            ArrConcat(toRet, valStructure);\r\n        //    ArrConcat(toRet, duplicateSubj);\r\n            if (!cols)\r\n                return toRet;\r\n            for (var i = 0; i < cols.length; i++) {\r\n                var colValRes = this.validateColumn(cols[i]);\r\n                ArrConcat(toRet, colValRes);\r\n            }\r\n            return toRet;\r\n        };\r\n\r\n\r\n        function validateStructure(cols) {\r\n            var toRet = [];\r\n            if (!cols) {\r\n                toRet.push({ level: eLevels.ERROR, message: VE.NULL_COLUMNS });\r\n                return toRet;\r\n            }\r\n            if (cols.length < 2) {\r\n                toRet.push({ level: eLevels.ERROR, message: VE.AT_LEAST_2_COLS });\r\n                return toRet;\r\n            }\r\n            for (var i = 0; i < cols.length - 1; i++) {\r\n                for (var j = i + 1; j < cols.length; j++) {\r\n                    if (cols[i].id == cols[j].id) {\r\n                        toRet.push({ level: eLevels.ERROR, message: VE.DUPLICATE_IDS });\r\n                    }\r\n                }\r\n            }\r\n\r\n            //At least a key and a value?\r\n            var keyCount = 0;\r\n            var valCount = 0;\r\n            for (i = 0; i < cols.length; i++) {\r\n                if (cols[i].key)\r\n                    keyCount++;\r\n\r\n                if (cols[i].subject && cols[i].subject == 'value')\r\n                    valCount++;\r\n            }\r\n            if (keyCount < 1)\r\n                toRet.push({ level: eLevels.ERROR, message: VE.AT_LEAST_1_KEY });\r\n            if (valCount < 1)\r\n                toRet.push({ level: eLevels.ERROR, message: VE.AT_LEAST_1_VALUE });\r\n            return toRet;\r\n        }\r\n\r\n        function checkDuplicateSubject(cols) {\r\n            var toRet = [];\r\n            if (!cols)\r\n                return null;\r\n            for (var i = 0; i < cols.length - 1; i++) {\r\n                if (cols[i].subject != 'undefined') {\r\n                    for (var j = i + 1; j < cols.length; j++) {\r\n                        //   if (cols[i].subject && cols[j].subject) {\r\n                        if (cols[j].subject != 'undefined') {\r\n                            if (cols[i].subject == cols[j].subject) {\r\n                                toRet.push({ level: eLevels.ERROR, message: VE.DUPLICATE_SUBJECTS });\r\n                                return toRet;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        function ArrConcat(a, b) {\r\n            if (!b)\r\n                return;\r\n            if (!a)\r\n                a = [];\r\n            if (b instanceof Array)\r\n                Array.prototype.push.apply(a, b);\r\n            else\r\n                a.push(b);\r\n        };\r\n\r\n\r\n        return Validator_DSD;\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/validators/Validator_DSD.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"loglevel\"\n ** module id = 5\n ** module chunks = 0\n **/","define([],\r\n    function () {\r\n        'use strict';\r\n        var e = {\r\n            //Col errors\r\n            NULL_COLUMN: 'nullColumn',\r\n            TITLE_BLANK: 'titleBlank',\r\n            DIMENSION_DATATYPE_ERROR: 'dimnsionDataTypeError',\r\n            SUBJECT_EMPTY: 'subjectEmpty',\r\n            DATATYPE_EMPTY: 'dataTypeEmpty',\r\n            CODELIST_EMPTY: 'codelistEmpty',\r\n            //structure errors\r\n            NULL_COLUMNS: 'nullColumns',\r\n            AT_LEAST_2_COLS: 'atLeast2Cols',\r\n            DUPLICATE_IDS: 'duplicateIDs',\r\n            AT_LEAST_1_KEY: 'atLeast1Key',\r\n            AT_LEAST_1_VALUE: 'atLeast1Value',\r\n            DUPLICATE_SUBJECTS:'duplicateSubjects'\r\n        };\r\n        return e;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/validators/Validator_DSD_Errors.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = \"<div id=divDSD> </div> <div id=divColEditor> <div id=divColEditorCnt> </div> <button id=btnColEditorOk class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button> <button id=btnColEditorCancel class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/html/DSDEditor.html\n ** module id = 7\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../html/DSDDisplay.html',\r\n    './comp/AddColButton',\r\n    './comp/ColsDisplay',\r\n    '../../../../nls/labels'\r\n],\r\n\r\n    function ($, DSDDisplayHTML, AddColButton, ColsDisplay, MLRes) {\r\n        var defConfig = {};\r\n        var h = {\r\n            idTDAddDim: '#tdAddDim',\r\n            idTDAddVal: '#tdAddVal',\r\n            idTDAddOther: '#tdAddOther',\r\n            idColsDisplay: '#colsDisplay',\r\n            idTblAddCol:'#tblAddCol'\r\n        };\r\n\r\n        function DSDDisplay(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n\r\n            this.$tdAddDim = null;\r\n            this.$tdAddVal = null;\r\n            this.$tdAddOther = null;\r\n            this.$colsDisplay = null;\r\n\r\n            this.lang = this.config.lang.toLowerCase();\r\n\r\n            this.addColBtnDim = new AddColButton(this.config);\r\n            this.addColBtnVal = new AddColButton(this.config);\r\n            this.addColBtnOther = new AddColButton(this.config);\r\n            this.colsDisplay = new ColsDisplay(this.config);\r\n\r\n        };\r\n\r\n        DSDDisplay.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n            this.$container.html(DSDDisplayHTML);\r\n\r\n            this.$tdAddDim = this.$container.find(h.idTDAddDim);\r\n            this.$tdAddVal = this.$container.find(h.idTDAddVal);\r\n            this.$tdAddOther = this.$container.find(h.idTDAddOther);\r\n            this.$colsDisplay = this.$container.find(h.idColsDisplay);\r\n\r\n            this.addColBtnDim.render(this.$tdAddDim);\r\n            this.addColBtnVal.render(this.$tdAddVal);\r\n            this.addColBtnOther.render(this.$tdAddOther);\r\n\r\n            this.addColBtnDim.set({\r\n                title: MLRes[this.lang]['dimension'],\r\n                help: MLRes[this.lang]['helpDim'],\r\n                evtId: 'addDim',\r\n                headerClass:'bg-dim'\r\n            });\r\n            this.addColBtnVal.set({\r\n                title: MLRes[this.lang]['value'],\r\n                help: MLRes[this.lang]['helpVal'],\r\n                evtId: 'addVal',\r\n                headerClass: 'bg-val'\r\n            });\r\n            this.addColBtnOther.set({\r\n                title: MLRes[this.lang]['other'],\r\n                help: MLRes[this.lang]['helpOther'],\r\n                evtId: 'addOther',\r\n                headerClass: 'bg-other'\r\n            });\r\n\r\n            this.colsDisplay.render(this.$colsDisplay);\r\n            this._bindEvents();\r\n        };\r\n\r\n        DSDDisplay.prototype.setCols = function (cols) {\r\n            this.reset();\r\n            this.colsDisplay.set(cols);\r\n        };\r\n        DSDDisplay.prototype.reset = function () {\r\n            this.colsDisplay.reset();\r\n        };\r\n\r\n        DSDDisplay.prototype._bindEvents = function () {};\r\n        DSDDisplay.prototype._unbindEvents = function () { };\r\n        DSDDisplay.prototype.destroy = function () {\r\n            this.addColBtnDim.destroy();\r\n            this.addColBtnVal.destroy();\r\n            this.addColBtnOther.destroy();\r\n            this.colsDisplay.destroy();\r\n        };\r\n        DSDDisplay.prototype.isEditable = function (editable) {\r\n            // return a boolean if the dsd is editable\r\n            //console.log ((typeof (editable) === 'boolean'))\r\n            if (typeof (editable) === 'boolean') {\r\n                //console.log(\"colsDisplay \" + typeof (this.colsDisplay.editable));\r\n                if (typeof (this.colsDisplay.editable) === 'function') this.colsDisplay.editable(editable);\r\n                if (editable) {\r\n                    this.$container.find(h.idTblAddCol).show();\r\n                   // if (typeof (this.colsDisplay) == 'function') this.colsDisplay.editable(editable);\r\n                } else {\r\n                    this.$container.find(h.idTblAddCol).hide();\r\n                }\r\n                return editable;\r\n            }\r\n            /*\r\n            this.colsDisplay.editable(editable);\r\n            if (editable) {\r\n                this.$container.find(h.idTblAddCol).show();\r\n            } else {\r\n                this.$container.find(h.idTblAddCol).hide();\r\n            }\r\n            */\r\n        };\r\n\r\n        return DSDDisplay;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/js/DSDDisplay.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = \"<table id=tblAddCol class=table> <tbody> <tr> <td id=tdAddDim class=cTdDim></td> <td id=tdAddVal class=cTdVal></td> <td id=tdAddOther class=cTdOther></td> </tr> </tbody> </table> <div id=colsDisplay></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/html/DSDDisplay.html\n ** module id = 9\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../../html/comp/AddColButton.html',\r\n    '../../../DSDColumnEditor/js/Events',\r\n    'amplify-pubsub'\r\n],\r\n\r\n    function ($, AddColButtonHTML, Evts, amplify) {\r\n        var defConfig = {};\r\n\r\n        var h = {\r\n            idBtnAddColTitle: '#btnAddColButtonTitle',\r\n            idBtnAdd: '#btnAdd',\r\n            idTdAddColButton_help: '#tdAddColButton_help',\r\n            idAddColH: '#addColH'\r\n        };\r\n\r\n        var e = {\r\n            addColButton_btnClick: Evts.COLUMN_CLICK_ADD\r\n        };\r\n\r\n        function AddColButton(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n\r\n            this.evtId = \"\";\r\n\r\n            this.$btnAddColTitle = null;\r\n            this.$btnAdd = null;\r\n            this.$tdAddColButton_help = null;\r\n\r\n        };\r\n\r\n        AddColButton.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n            this.$container.html(AddColButtonHTML);\r\n\r\n            this.$btnAddColTitle = this.$container.find(h.idBtnAddColTitle);\r\n            this.$btnAdd = this.$container.find(h.idBtnAdd);\r\n            this.$tdAddColButton_help = this.$container.find(h.idTdAddColButton_help);\r\n\r\n            this._bindEvents();\r\n        };\r\n        AddColButton.prototype.set = function (vals) {\r\n\r\n            if (!vals)\r\n                return;\r\n            if (vals.title)\r\n                this.setTitle(vals.title);\r\n            if (vals.help)\r\n                this.setHelp(vals.help);\r\n            if (vals.evtId)\r\n                this.setEvtId(vals.evtId);\r\n            if (vals.headerClass)\r\n                this.$container.find(h.idAddColH).addClass(vals.headerClass);\r\n        };\r\n        AddColButton.prototype.setTitle = function (title) {\r\n            this.$btnAddColTitle.html(title);\r\n        };\r\n        AddColButton.prototype.setHelp = function (msg) {\r\n            this.$tdAddColButton_help.html(msg);\r\n        };\r\n        AddColButton.prototype.setEvtId = function (id) {\r\n            this.evtId=id;\r\n        };\r\n        AddColButton.prototype.reset = function () {\r\n            this.setTitle('');\r\n            this.setHelp('');\r\n        };\r\n\r\n        AddColButton.prototype._bindEvents = function () {\r\n            var me = this;\r\n            this.$btnAdd.on('click', function () { amplify.publish(e.addColButton_btnClick, me.evtId) });\r\n        };\r\n        AddColButton.prototype._unbindEvents = function () {\r\n            this.$btnAdd.off('click');\r\n        };\r\n        AddColButton.prototype.destroy = function () {\r\n            this._unbindEvents();\r\n        };\r\n\r\n        return AddColButton;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/js/comp/AddColButton.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = \"<table class=\\\"table roundBorder\\\"> <thead> <tr id=addColH> <th class=btnAddColHead> <span id=btnAddColButtonTitle></span> <br/> <button id=btnAdd type=button class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button> </th> </tr> </thead> <tbody> <tr> <td id=tdAddColButton_help></td> </tr> </tbody> </table>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/html/comp/AddColButton.html\n ** module id = 11\n ** module chunks = 0\n **/","define([],\r\n    function () {\r\n        'use strict';\r\n        var e = {\r\n            CODELIST_SELECTOR_CHANGED: 'fx.CodelistSelector.chaged',\r\n            DYNAMIC_RADIO_CHANGED: 'fx.DynamicRadio.chaged',\r\n\r\n            COLUMN_CLICK_ADD: 'fx.addColButton.btnClick',\r\n            COLUMN_CLICK_EDIT: 'fx.coldisplay.edit',\r\n            COLUMN_CLICK_DELETE: 'fx.coldisplay.delete'\r\n        };\r\n        return e;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/js/Events.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"amplify-pubsub\"\n ** module id = 13\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../../html/comp/ColsDisplay.html',\r\n    '../../../DSDEditor_Utils',\r\n    './colsDisplay/ColsDisplayBtns',\r\n    '../../../DSDConfigs/js/CodelistConfigReader'\r\n],\r\n\r\n    function ($, ColsDisplayHTML, DSDEditor_Utils, ColsDisplayBtns, CodelistConfigReader) {\r\n        var defConfig = {\r\n            lang: \"EN\"\r\n        };\r\n\r\n        var h = {\r\n            idTrHead: '#trColInfoHead',\r\n            idTrEdit: '#trEdit',\r\n            idTrSubj: '#trSubj',\r\n            idTrDataType: '#trDataType',\r\n            idTrDomain: '#trDomain',\r\n            idTrSuppl: '#trSuppl'\r\n        };\r\n\r\n        var e = {\r\n        };\r\n\r\n        var _html = {\r\n            colTH_empty: '<th style=\"width:10%\"></th>',\r\n            colTD_empty: '<td></td>',\r\n            colTH: '<th class=\"%cl%\">%cnt%</th>',\r\n            colTD_Edit: '<td><div id=\"%id%\"></div></td>',\r\n            colTD: '<td>%cnt%</td>',\r\n            colSubj: '<td class=\"text-muted\">Subject</td>',\r\n            colDataType: '<td class=\"text-muted\">Data type</td>',\r\n            colDomain: '<td class=\"text-muted\">Domain</td>',\r\n            colSuppl: '<td class=\"text-muted\">Supplemental</td>'\r\n        };\r\n\r\n        var utils = new DSDEditor_Utils();\r\n\r\n        function ColsDisplay(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n\r\n            //console.log(\"ColsDisplay\", this.config);\r\n\r\n            this.$trHead = null;\r\n            this.$trEdit = null;\r\n            this.$trSubj = null;\r\n            this.$trDataType = null;\r\n            this.$trDomain = null;\r\n\r\n            this.editBtns = [];\r\n            this.editable;\r\n        };\r\n\r\n        ColsDisplay.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n            this.$container.html(ColsDisplayHTML);\r\n\r\n            this.$trHead = this.$container.find(h.idTrHead);\r\n            this.$trEdit = this.$container.find(h.idTrEdit);\r\n            this.$trSubj = this.$container.find(h.idTrSubj);\r\n            this.$trDataType = this.$container.find(h.idTrDataType);\r\n            this.$trDomain = this.$container.find(h.idTrDomain);\r\n            this.$trSuppl = this.$container.find(h.idTrSuppl);\r\n\r\n            this._bindEvents();\r\n        };\r\n        ColsDisplay.prototype.set = function (cols) {\r\n            this.reset();\r\n            if (!cols)\r\n                return;\r\n            this._createHeader(cols);\r\n            this._createEditRow(cols);\r\n            this._createRows(cols);\r\n        };\r\n        ColsDisplay.prototype._createHeader = function (cols) {\r\n            if (!cols)\r\n                return '';\r\n            var toRet = _html.colTH_empty;\r\n            for (var i = 0; i < cols.length; i++) {\r\n                toRet += createColTH(cols[i]);\r\n            }\r\n            this.$trHead.html(toRet);\r\n        };\r\n        function createColTH(col) {\r\n            var w = 90 / col.length;\r\n            var toRet = _html.colTH;\r\n            toRet = toRet.replace('%cnt%', utils.MLStringToString(col.title, '<br/>'));\r\n            if (col.key)\r\n                toRet = toRet.replace('%cl%', 'bg-dim');\r\n            else if (col.subject == 'value')\r\n                toRet = toRet.replace('%cl%', 'bg-val');\r\n            else\r\n                toRet = toRet.replace('%cl%', 'bg-other');\r\n            return toRet;\r\n        }\r\n        ColsDisplay.prototype._createEditRow = function (cols) {\r\n            //console.log(\"ColsDisplay :\"+this.editable);\r\n            if (!cols)\r\n                return;\r\n            var toSet = _html.colTD_empty;\r\n            var idPart = \"tdEdit_\";\r\n            for (var i = 0; i < cols.length; i++) {\r\n                toSet += _html.colTD_Edit.replace(\"%id%\", idPart + \"\" + cols[i].id);\r\n            }\r\n            this.$trEdit.html(toSet);\r\n            this.editBtns = [];\r\n\r\n            for (i = 0; i < cols.length; i++) {\r\n                var toFind = '#' + idPart + \"\" + cols[i].id;\r\n                var td = this.$trEdit.find(toFind);\r\n                var btn = new ColsDisplayBtns(this.config);\r\n                btn.render(td);\r\n                btn.setEventId(cols[i].id);\r\n                btn.deleteEnabled(this.editable);\r\n                this.editBtns.push(btn);\r\n            }\r\n        };\r\n\r\n        ColsDisplay.prototype._createRows = function (cols) {\r\n            if (!cols)\r\n                return '';\r\n            var subj = _html.colSubj;\r\n            var dT = _html.colDataType;\r\n            var domain = _html.colDomain;\r\n            var suppl = _html.colSuppl;\r\n            for (var i = 0; i < cols.length; i++) {\r\n                subj += this._createColTD(cols[i], 'subject', this.config.lang);\r\n                dT += this._createColTD(cols[i], 'dataType', this.config.lang);\r\n                domain += this._createColTD(cols[i], 'domain', this.config.lang);\r\n                suppl += this._createColTD(cols[i], 'supplemental', this.config.lang);\r\n            }\r\n            this.$trSubj.html(subj);\r\n            this.$trDataType.html(dT);\r\n            this.$trDomain.html(domain);\r\n            this.$trSuppl.html(suppl);\r\n        };\r\n        ColsDisplay.prototype._createColTD = function (col, field, lang) {\r\n            var toRet = _html.colTD;\r\n            switch (field) {\r\n                case 'subject':\r\n                    if (col.subject)\r\n                        toRet = toRet.replace('%cnt%', col.subject);\r\n                    else\r\n                        toRet = toRet.replace('%cnt%', '');\r\n                    break;\r\n                case 'dataType':\r\n                    if (col.dataType)\r\n                        toRet = toRet.replace('%cnt%', col.dataType);\r\n                    else\r\n                        toRet = toRet.replace('%cnt%', '');\r\n                    break;\r\n                case 'domain':\r\n                    if (col.domain)\r\n                        toRet = toRet.replace('%cnt%', this._domainToString(col.domain, lang));\r\n                    else\r\n                        toRet = toRet.replace('%cnt%', '');\r\n                    break;\r\n                case 'supplemental':\r\n                    if (col.supplemental)\r\n                        toRet = toRet.replace('%cnt%', utils.MLStringToString(col.supplemental, '<br/>'));\r\n                    else\r\n                        toRet = toRet.replace('%cnt%', '');\r\n                    break;\r\n            }\r\n            return toRet;\r\n        };\r\n        ColsDisplay.prototype._domainToString = function(domain, lang) {\r\n            //Make it multielement\r\n            if (domain.codes && domain.codes[0]) {\r\n                //Read the config reater just once!\r\n                var clId = domain.codes[0].idCodeList;\r\n                if (domain.codes[0].version)\r\n                    clId += \"|\" + domain.codes[0].version;\r\n                var clCfg = new CodelistConfigReader(this.config);\r\n                var cl = clCfg.getCodelist(clId);\r\n                if (!cl) return \"\";\r\n                return cl.text[lang];\r\n            }\r\n            return \"\";\r\n        };\r\n        ColsDisplay.prototype.reset = function () {\r\n            this.$trHead.html('');\r\n            this.$trSubj.html('');\r\n            this.$trDataType.html('');\r\n            this.$trDomain.html('');\r\n            this.$trSuppl.html('');\r\n            this.editBtns = [];\r\n        };\r\n        ColsDisplay.prototype.editable = function (editable) {\r\n            //console.log(\"ColsDisplay.prototype.editable\", editable);\r\n            this.editable = editable;\r\n            if (this.editBtns) {\r\n                for (var i = 0; i < this.editBtns.length; i++)\r\n                    this.editBtns[i].deleteEnabled(editable);\r\n            }\r\n            return editable;\r\n            /*if (editable)\r\n                this.$trEdit.show();\r\n            else\r\n                this.$trEdit.hide();*/\r\n        };\r\n\r\n        ColsDisplay.prototype._bindEvents = function () { };\r\n        ColsDisplay.prototype._unbindEvents = function () { };\r\n        ColsDisplay.prototype.destroy = function () {\r\n            //this._unbindEvents();\r\n            if (this.editBtns) {\r\n                for (var i = 0; i < this.editBtns.length; i++)\r\n                    this.editBtns[i].destroy();\r\n            }\r\n        };\r\n\r\n        return ColsDisplay;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/js/comp/ColsDisplay.js\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<table class=\\\"table table-bordered\\\"> <thead> <tr id=trColInfoHead></tr> </thead> <tbody> <tr id=trEdit></tr> <tr id=trSubj></tr> <tr id=trDataType></tr> <tr id=trDomain></tr> <tr id=trSuppl></tr> </tbody> </table>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/html/comp/ColsDisplay.html\n ** module id = 15\n ** module chunks = 0\n **/","define([\r\n],\r\nfunction () {\r\n    var DSDEditor_Utils = function () {\r\n    };\r\n    DSDEditor_Utils.prototype.MLStringToString = function (MLString, separator) {\r\n        if (!MLString)\r\n            return \"\";\r\n        var toRet = \"\";\r\n        for (var l in MLString) {\r\n            toRet += l + \": \" + MLString[l] + separator;\r\n        }\r\n        //Removes the last separator\r\n        toRet = toRet.substring(0, toRet.length - separator.length);\r\n        return toRet;\r\n    }\r\n\r\n    return DSDEditor_Utils;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDEditor_Utils.js\n ** module id = 16\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../../../html/comp/colsDisplay/ColsDisplayBtns.html',\r\n    '../../../../DSDColumnEditor/js/Events',\r\n    'amplify-pubsub'\r\n],\r\n\r\n    function ($, ColsDisplayBtnsHTML, Evts, amplify) {\r\n        var defConfig = {};\r\n\r\n        var h = {\r\n            idBtnEdit: '#colsDisplayColEdit',\r\n            idBtnDel: '#colsDisplayColDel',\r\n        };\r\n\r\n        var e = {\r\n            clickEdit: Evts.COLUMN_CLICK_EDIT,\r\n            clickDelete: Evts.COLUMN_CLICK_DELETE\r\n        };\r\n\r\n        function ColsDisplayBtns(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n\r\n            this.$btnEdit = null;\r\n            this.$btnDel = null;\r\n            this.evtId = \"\";\r\n\r\n        };\r\n\r\n        ColsDisplayBtns.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n\r\n            this.$container = cnt;\r\n            this.$container.html(ColsDisplayBtnsHTML);\r\n            this.$btnEdit = this.$container.find(h.idBtnEdit);\r\n            this.$btnDel = this.$container.find(h.idBtnDel);\r\n\r\n            this._bindEvents();\r\n        };\r\n\r\n        ColsDisplayBtns.prototype.deleteEnabled = function (enabled) {\r\n            //console.log(\"ColsDisplayBtns.prototype.deleteEnabled \", enabled)\r\n            if (typeof enabled === 'undefined')\r\n                return;\r\n            if (enabled)\r\n                this.$btnDel.prop(\"disabled\", false);\r\n            else\r\n                this.$btnDel.prop(\"disabled\", true);\r\n        };\r\n\r\n        ColsDisplayBtns.prototype.setEventId = function (evtId) {\r\n            this.evtId = evtId;\r\n        };\r\n\r\n        ColsDisplayBtns.prototype._bindEvents = function () {\r\n            var me = this;\r\n            this.$btnEdit.on('click', function () { amplify.publish(e.clickEdit, me.evtId); });\r\n            this.$btnDel.on('click', function () { amplify.publish(e.clickDelete, me.evtId); });\r\n        };\r\n        ColsDisplayBtns.prototype._unbindEvents = function () {\r\n            this.$btnEdit.off('click');\r\n            this.$btnDel.off('click');\r\n        };\r\n        ColsDisplayBtns.prototype.destroy = function () {\r\n            this._unbindEvents();\r\n        };\r\n\r\n        return ColsDisplayBtns;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/js/comp/colsDisplay/ColsDisplayBtns.js\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \"<button id=colsDisplayColEdit class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span> </button> <button id=colsDisplayColDel class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-trash\\\"></span> </button>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDDisplay/html/comp/colsDisplay/ColsDisplayBtns.html\n ** module id = 18\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../../../../config/config',\r\n    '../../../../config/config-default'\r\n],\r\n    function ($, C, DC) {\r\n        var defConfig = {};\r\n\r\n        function CodelistConfigReader(config, callB) {\r\n            this.config = {};\r\n            $.extend(true, this.config, config, defConfig);\r\n\r\n            this.codelists = this.config.DSD_EDITOR_CODELISTS;\r\n\r\n            if (callB) callB();\r\n        };\r\n\r\n        CodelistConfigReader.prototype.getCodelists = function () {\r\n            return this.codelists;\r\n        }\r\n\r\n        CodelistConfigReader.prototype.getFilteredCodelists = function (subject) {\r\n            if (!this.codelists)\r\n                return null;\r\n            if (!subject || subject=='undefined')\r\n                return this.codelists;\r\n            var toRet = [];\r\n\r\n            for (var i = 0; i < this.codelists.length; i++) {\r\n                if (this.codelists[i].subject.toLowerCase() == subject.toLowerCase()) {\r\n                    toRet.push(this.codelists[i]);\r\n                }\r\n            }\r\n            return toRet;\r\n        };\r\n\r\n        CodelistConfigReader.prototype.getCodelist = function (codelistId) {\r\n            if (!this.codelists)\r\n                return null;\r\n            for (var i = 0; i < this.codelists.length; i++) {\r\n                if (this.codelists[i].value == codelistId)\r\n                    return this.codelists[i];\r\n            }\r\n            return null;\r\n        }\r\n\r\n        return CodelistConfigReader;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDConfigs/js/CodelistConfigReader.js\n ** module id = 19\n ** module chunks = 0\n **/","define(function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n\r\n    };\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/config.js\n ** module id = 20\n ** module chunks = 0\n **/","define(function () {\r\n\r\n    'use strict';\r\n    return {\r\n\r\n        LANG : \"EN\",\r\n        LOCALE : \"en_EN\",\r\n        LANGFALLBACKORDER : [\"EN\", \"FR\", \"ES\", \"AR\", \"PR\"],\r\n\r\n        SECONDARY_MENU: {\r\n            url: 'fx-d-m/config/secondary_menu.json',\r\n            disable: ['delete', 'close', 'data', 'dsd']\r\n        },\r\n\r\n        DSD_EDITOR_CONTEXT_SYSTEM: 'demo1',\r\n        DSD_EDITOR_DATASOURCES: ['D3S'],\r\n        DSD_EDITOR_SUBJECTS: \"submodules/fenix-ui-DSDEditor/config/DSDEditor/Subjects.json\",\r\n        DSD_EDITOR_DATATYPES: \"submodules/fenix-ui-DSDEditor/config/DSDEditor/Datatypes.json\",\r\n        DSD_EDITOR_CODELISTS: \"config/submodules/DSDEditor/cstat_core_codelists.json\",\r\n\r\n        DATA_MANAGEMENT_NOT_LOGGEDIN_URL: \"./index.html\",\r\n        FAKE_AUTHENTICATION: true,\r\n\r\n        CATALOG_BLANK_FILTER: 'config/submodules/catalog/uae-catalog-blank-filter.json',\r\n\r\n        SERVICE_BASE_ADDRESS: \"http://fenix.fao.org/d3s_fenix/msd\",\r\n        SERVICE_GET_DATA_METADATA: {service: \"resources\", queryParams: {full: true, dsd: true}},\r\n        SERVICE_GET_METADATA: {service: \"resources/metadata\", queryParams: {full: true, dsd: true}},\r\n        SERVICE_COPY_METADATA: {service: \"resources/metadata\", queryParams: {full: true, dsd: true, export:true}},\r\n        SERVICE_SAVE_METADATA: {service: \"resources/metadata\"},\r\n        SERVICE_SAVE_DSD: {service: \"resources/dsd\"},\r\n        SERVICE_SAVE_DATA: {service: \"resources\"},\r\n        SERVICE_RESOURCES_FIND: {service: \"resources/find\"}\r\n\r\n\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/config-default.js\n ** module id = 21\n ** module chunks = 0\n **/","\r\ndefine([\r\n        \"./en/labels\",\r\n        \"./fr/labels\"\r\n    ],\r\n    function (i18nEn,i18nFr) {\r\n\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            en: i18nEn,\r\n            fr: i18nFr\r\n\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nls/labels.js\n ** module id = 22\n ** module chunks = 0\n **/","/*global define*/\r\ndefine(function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"ok\": \"Ok\",\r\n        \"cancel\": \"Cancel\",\r\n        \"add\": \"Add\",\r\n        \"done\": \"Done\",\r\n        \"reset\": \"Reset\",\r\n        \"delete\": \"Delete\",\r\n        \"updated\": \"Updated\",\r\n        \"confirmDelete\": \"Delete?\",\r\n        \"edit\": \"Edit\",\r\n        \"title\": \"Title\",\r\n        \"subject\": \"Subject\",\r\n        \"domain\": \"Domain\",\r\n        \"key\": \"Key\",\r\n        \"datatype\": \"Data type\",\r\n        \"supplemental\": \"Supplemental\",\r\n        \"areYouSure\": \"Are you sure?\",\r\n        \"unsavedChanges\":\"Some changes are not saved, cancel anyway?\",\r\n\r\n        \"select\": \"Select...\",\r\n\r\n        \"nullColumns\": \"Columns cannot be empty\",\r\n        \"atLeast2Cols\": \"The dataset must have at least 2 columns\",\r\n        \"atLeastOneKey\": \"The dataset must have at least one Key\",\r\n        \"atLeastOneValue\": \"The dataset must have at least one 'value' subject\",\r\n        \"nullColumn\": \"Column cannot be null\",\r\n        \"empty\": \"Is empty\",\r\n        \"DimensionDataTypeConflict\": \"Conflict detected between value and datatype defined for the value\",\r\n        \"EmptyIdCodeList\": \"The codelist's ID cannot be empty\",\r\n        \"duplicateColumnIDs\": \"The column's ID must be unique, check your column's IDs\",\r\n        \"duplicateSubject\": \"Two columns cannot have the same subject, check your column's subjects\",\r\n\r\n\r\n        \"dataType\": \"Data type\",\r\n\r\n        \"titleBlank\": \"Title cannot be blank\",\r\n        \"subjectEmpty\": \"Subject cannot be empty\",\r\n        \"dataTypeEmpty\": \"Datatype cannot be empty\",\r\n        \"codelistEmpty\": \"Codelist cannot be empty\",\r\n\r\n        \"dimension\": \"Dimension\",\r\n        \"value\": \"Value\",\r\n        \"other\": \"Other\",\r\n        \"helpDim\": \"You need at least one dimension, dimensions are used to define your measure.<br/>Ex. Year, product, area...\",\r\n        \"helpVal\": \"You need exactly one measure. It is usually a number.<br/>Ex. Quantity, value...\",\r\n        \"helpOther\": \"Add additional informations attached to your measure.<br/>Ex. measurement unit, flags, notes...\"\r\n\r\n\r\n    }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nls/en/labels.js\n ** module id = 23\n ** module chunks = 0\n **/","/*global define*/\r\ndefine(function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        \"yes\": \"Oui\",\r\n        \"no\": \"Non\",\r\n        \"ok\": \"Ok\",\r\n        \"cancel\": \"Annuler\",\r\n        \"add\": \"Ajouter\",\r\n        \"done\": \"Terminé\",\r\n        \"reset\": \"Reset\",\r\n        \"delete\": \"Supprimer\",\r\n        \"updated\": \"Mis(e) à jour\",\r\n        \"confirmDelete\": \"Supprimer?\",\r\n        \"edit\": \"Éditer\",\r\n        \"title\": \"Titre\",\r\n        \"subject\": \"Sujet\",\r\n        \"domain\": \"Domaine\",\r\n        \"key\": \"Clé\",\r\n        \"datatype\": \"Type de donnée\",\r\n        \"supplemental\": \"Supplément\",\r\n        \"areYouSure\": \"Êtes-vous sûr?\",\r\n        \"unsavedChanges\": \"Certains changements n'ont pas été enregistrés, annuler quand même?\",\r\n\r\n        \"select\": \"Sélectionner\",\r\n\r\n        \"nullColumns\": \"Les colonnes ne peuvent pas être vides\",\r\n        \"atLeast2Cols\": \"La base de données doit contenir au moins 2 colonnes\",\r\n        \"atLeastOneKey\": \"La base de données doit contenir au moins une Clé\",\r\n        \"atLeastOneValue\": \"La base de données doit contenir au moins une colonne 'valeur'\",\r\n        \"nullColumn\": \"La colonne ne peut pas être nulle\",\r\n        \"empty\": \"Est vide(s)\",\r\n        \"DimensionDataTypeConflict\": \"Conflit détecté entre la valeur et le type de donnée défini pour la valeur\",\r\n        \"EmptyIdCodeList\": \"L'identifiant de la codeliste ne peut pas être vide\",\r\n        \"duplicateColumnIDs\": \"L'identifiant de la colonne doit être unique, s'il vous plaît vérifiez les identifiants des vos colonnes\",\r\n        \"duplicateSubject\": \"Deux colonnes ne peuvent pas avoir le même sujet, s'il vous plaît vérifier les sujets des vos colonnes\",\r\n\r\n        \"dataType\": \"[FR] Data type\",\r\n\r\n        \"titleBlank\": \"[FR] Title cannot be blank\",\r\n        \"subjectEmpty\": \"[FR] Subject cannot be empty\",\r\n        \"dataTypeEmpty\": \"[FR] Datatype cannot be empty\",\r\n        \"codelistEmpty\": \"[FR] Codelist cannot be empty\",\r\n\r\n        \"dimension\": \"[FR] Dimension\",\r\n        \"value\": \"[FR] Value\",\r\n        \"other\": \"[FR] Other\",\r\n        \"helpDim\": \"[FR] You need at least one dimension, dimensions are used to define your measure.<br/>Ex. Year, product, area...\",\r\n        \"helpVal\": \"[FR] You need exactly one measure. It is usually a number.<br/>Ex. Quantity, value...\",\r\n        \"helpOther\": \"[FR] Add additional informations attached to your measure.<br/>Ex. measurement unit, flags, notes...\"\r\n\r\n\r\n    }\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nls/fr/labels.js\n ** module id = 24\n ** module chunks = 0\n **/","define(['jquery',\r\n    'loglevel',\r\n    '../html/DSDColumnEditor.html',\r\n    './comp/DynamicRadio',\r\n    './comp/DomainEditor',\r\n    '../../../../nls/labels',\r\n        '../../DSDConfigs/js/ColumnEditorReader',\r\n    '../../DSDConfigs/js/SubjectReader',\r\n    '../../DSDConfigs/js/DatatypeReader',\r\n    '../../../MLInput',\r\n    './Events',\r\n    '../../validators/Validator_DSD',\r\n    '../../validators/Validator_DSD_Errors',\r\n    'amplify-pubsub',\r\n    'parsleyjs'\r\n],\r\n    function ($, log, DSDColumnEditorHTML, DynamicRadio, DomainEditor, mlRes, ColumnEditorReader, SubjectReader, DatatypeReader, MLInput, Evts, ValidatorDSD, VErrors, amplify) {\r\n        //var defConfig = { inputLangs: ['EN', 'FR'] };\r\n\r\n        var defConfig = { inputLangs: ['EN'] };\r\n        var h = {\r\n            txtTitle: \"#txtTitle\",\r\n            txtSupplemental: '#txtSupplemental',\r\n            trSubj: '#trSubj',\r\n            tdSubj: '#tdSubj',\r\n            trDataType: \"#trDataType\",\r\n            tdDataType: \"#tdDataType\",\r\n            trDomain: '#trDomain',\r\n            tdDomain: '#tdDomainEditor',\r\n            tblColEditor: '#tblColEditor',\r\n\r\n            lblTitle: '#lTitle',\r\n            lblSuppl: '#lSupplemental',\r\n            lblSubj: '#lSubject',\r\n            lblDataType: '#lDataType',\r\n            lblDomain: '#lDomain'\r\n        };\r\n        var EDITOR_TYPE = {\r\n            dimension: 'dimension',\r\n            value: 'value',\r\n            other: 'other'\r\n        };\r\n        var DATA_TYPES = {\r\n            code: 'code'\r\n        };\r\n        var RADIOGROUP_ID = {\r\n            SUBJ: 'radioSubj',\r\n            DTYPE: 'radioDatatype'\r\n        };\r\n\r\n        function DSDColumnEditor(config) {\r\n            this.config = {};\r\n            this.$cnt = null;\r\n            $.extend(true, this.config, config, defConfig);\r\n\r\n            this.lang = this.config.inputLangs[0] || defConfig.inputLangs[0];\r\n            this.lang = this.lang.toLowerCase();\r\n\r\n            this.$txtTitle;\r\n            this.$txtSupplemental;\r\n            this.dynRadioSubj;\r\n            this.mlTitle;\r\n            this.mlSupplemental;\r\n            this.dynRadioDataType;\r\n\r\n            this.editorType = \"\";\r\n            this.colID = \"\";\r\n            //keep the values field, remove it when the column's distinct will be calculated by the server\r\n            this.valuesField = null; \r\n\r\n            this.domainEditor = new DomainEditor(this.config);\r\n            this.columnEditorReader = new ColumnEditorReader();\r\n            this.subjectReader = new SubjectReader();\r\n            this.datatypeReader = new DatatypeReader();\r\n\r\n            this.dynRadioSubj = null;\r\n            this.dynRadioDataType = null;\r\n\r\n            this.validator = null;\r\n\r\n            this.editorsVisibilityCfg = { subject: true, domain: true, datatype: true };\r\n\r\n        };\r\n\r\n        DSDColumnEditor.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$cnt = cnt;\r\n            this.$cnt.html(DSDColumnEditorHTML);\r\n\r\n            this.$txtTitle = this.$cnt.find(h.txtTitle);\r\n            this.$txtSupplemental = this.$cnt.find(h.txtSupplemental);\r\n\r\n            this.$trSubj = this.$cnt.find(h.trSubj);\r\n            var $tdSubj = this.$cnt.find(h.tdSubj);\r\n            this.$trDomain = this.$cnt.find(h.trDomain);\r\n            var $tdDomain = this.$cnt.find(h.tdDomain);\r\n            this.dynRadioSubj = new DynamicRadio();\r\n            this.dynRadioSubj.render($tdSubj);\r\n\r\n            this.$trDataType = this.$cnt.find(h.trDataType);\r\n            var $tdDataType = this.$cnt.find(h.tdDataType);\r\n            this.dynRadioDataType = new DynamicRadio();\r\n            this.dynRadioDataType.render($tdDataType);\r\n\r\n            this.mlTitle = new MLInput({ langs: this.config.inputLangs });\r\n            this.mlTitle.render(this.$txtTitle);\r\n            this.mlSupplemental = new MLInput({ langs: this.config.inputLangs });\r\n            this.mlSupplemental.render(this.$txtSupplemental);\r\n\r\n            this.domainEditor.render($tdDomain);\r\n\r\n            this._bindEvents();\r\n            this._attachValidator();\r\n            this._doML();\r\n        };\r\n\r\n        function showHide($elem, visible) {\r\n            if (typeof visible === 'undefined')\r\n                return;\r\n            if (visible)\r\n                $elem.show();\r\n            else\r\n                $elem.hide();\r\n        }\r\n        DSDColumnEditor.prototype.setEditMode = function (cfg) {\r\n            this.editorsVisibilityCfg = cfg;\r\n            showHide(this.$trSubj, cfg.subject);\r\n            showHide(this.$trDomain, cfg.domain);\r\n            showHide(this.$trDataType, cfg.datatype);\r\n        };\r\n\r\n        DSDColumnEditor.prototype.newColumn = function () {\r\n            this.reset();\r\n        };\r\n\r\n        DSDColumnEditor.prototype._subjectChanged = function (v) {\r\n            this.updateDataTypes(this.editorType, v);\r\n            this.domainEditor.reset();\r\n        };\r\n\r\n        DSDColumnEditor.prototype._dataTypeChanged = function (v) {\r\n            this.domainEditor.setMode(v, this.dynRadioSubj.get());\r\n        };\r\n\r\n        DSDColumnEditor.prototype.setColumnEditorType = function (type) {\r\n            this.editorType = type;\r\n            var subj = this.columnEditorReader.getColumnTypeSubjects(type);\r\n            if (!subj || subj.length == 0) {\r\n                this._subjectsVisible(false);\r\n                return;\r\n            }\r\n\r\n            var s = this.subjectReader.getFilteredSubjects(subj);\r\n            var s2 = [];\r\n            for (var i = 0; i < s.length; i++) {\r\n                s2.push({ value: s[i].value, text: s[i].text.EN });\r\n            }\r\n            var checked = null;\r\n            if (s2.length == 1) {\r\n                checked = s2[0].value;\r\n                this._subjectsVisible(false);\r\n            }\r\n            else {\r\n                this._subjectsVisible(true);\r\n            }\r\n\r\n            this.dynRadioSubj.setRadios(RADIOGROUP_ID.SUBJ, s2, checked);\r\n            this.updateDataTypes(type, checked);\r\n        };\r\n        DSDColumnEditor.prototype.updateDataTypes = function (columnType, subject) {\r\n            var dts = this.columnEditorReader.getSubjectDatatypes(columnType, subject);\r\n            if (!dts)\r\n                return;\r\n            var dts2 = this.datatypeReader.getFilteredDatatypes(dts);\r\n            var dts3 = [];\r\n            for (var i = 0; i < dts2.length; i++) {\r\n                dts3.push({ value: dts2[i].value, text: dts2[i].text.EN });\r\n            }\r\n            this.dynRadioDataType.setRadios(RADIOGROUP_ID.DTYPE, dts3, '');\r\n        };\r\n        DSDColumnEditor.prototype.reset = function () {\r\n            this.colID = \"\";\r\n            this.valuesField = null;\r\n            this.mlTitle.reset();\r\n            this.mlSupplemental.reset();\r\n            this.dynRadioSubj.reset();\r\n            this.dynRadioDataType.reset();\r\n            //this.editorType = \"\";\r\n            this.setColumnEditorType(\"\");\r\n            this.domainEditor.reset();\r\n        };\r\n        DSDColumnEditor.prototype._subjectsVisible = function (visible) {\r\n            //overridden by the component's config\r\n            if (typeof this.editorsVisibilityCfg.subject !== 'undefined')\r\n                if (!this.editorsVisibilityCfg.subject)\r\n                    return;\r\n\r\n            //var $trSubj = this.$cnt.find(h.trSubj);\r\n            if (visible)\r\n                this.$trSubj.show();\r\n            else\r\n                this.$trSubj.hide();\r\n        };\r\n\r\n        DSDColumnEditor.prototype.getColumn = function () {\r\n            var toRet = {};\r\n            toRet.id = this.colID;\r\n            if (this.valuesField)\r\n                toRet.values = this.valuesField;\r\n            if (this.editorType == EDITOR_TYPE.dimension)\r\n                toRet.key = true;\r\n            else\r\n                toRet.key = false;\r\n            toRet.subject = this.dynRadioSubj.get();\r\n            toRet.dataType = this.dynRadioDataType.get();\r\n            toRet.title = this.mlTitle.get();\r\n            toRet.supplemental = this.mlSupplemental.get();\r\n            toRet.domain = this.domainEditor.get();\r\n\r\n            return toRet;\r\n        };\r\n\r\n        DSDColumnEditor.prototype.setColumn = function (toSet) {\r\n            this.reset();\r\n            this.colID = toSet.id;\r\n            this.valuesField = toSet.values;\r\n            var type = EDITOR_TYPE.other;\r\n            if (toSet.key)\r\n                type = EDITOR_TYPE.dimension;\r\n            else if (toSet.subject == 'value')\r\n                type = EDITOR_TYPE.value;\r\n            this.setColumnEditorType(type);\r\n            this.mlTitle.set(toSet.title);\r\n            this.mlSupplemental.set(toSet.supplemental);\r\n            this.dynRadioSubj.set(toSet.subject);\r\n            this.dynRadioDataType.set(toSet.dataType);\r\n\r\n            if (toSet.dataType == DATA_TYPES.code) {\r\n                this.domainEditor.set(DATA_TYPES.code, toSet.subject, toSet.domain);\r\n            }\r\n        };\r\n\r\n        DSDColumnEditor.prototype._bindEvents = function () {\r\n            var me = this;\r\n            amplify.subscribe(Evts.DYNAMIC_RADIO_CHANGED, this, function (val, group) {\r\n                if (group == RADIOGROUP_ID.SUBJ) { me._subjectChanged(val); }\r\n                else if (group == RADIOGROUP_ID.DTYPE) { me._dataTypeChanged(val); };\r\n            });\r\n        };\r\n\r\n        DSDColumnEditor.prototype._unbindEvents = function () {\r\n            amplify.unsubscribe(Evts.DYNAMIC_RADIO_CHANGED);\r\n        };\r\n\r\n        DSDColumnEditor.prototype._attachValidator = function () {\r\n            log.info(\"DSDColumnEditor.prototype._attachValidator\")\r\n            var tblColEditor = this.$cnt.find(h.tblColEditor);\r\n            this.validator = tblColEditor.parsley();\r\n        };\r\n        DSDColumnEditor.prototype._detachValidator = function () {\r\n            log.info(\"DSDColumnEditor.prototype._detachValidator\")\r\n            this.validator.destroy();\r\n        };\r\n\r\n        DSDColumnEditor.prototype.validate = function () {\r\n            log.info(\"DSDColumnEditor.prototype.validate\")\r\n\r\n            val = new ValidatorDSD();\r\n            var valRes = val.validateColumn(this.getColumn());\r\n            this.updateValidationUI(valRes);\r\n\r\n            if (!valRes || valRes.length == 0) return true;\r\n\r\n            return false;\r\n        };\r\n        DSDColumnEditor.prototype.updateValidationUI = function (valRes) {\r\n            log.info(\"DSDColumnEditor.prototype.updateValidationUI\", this.validator, valRes)\r\n\r\n            this.$cnt.find('#lTitle').parsley().reset();\r\n            this.$cnt.find('#lSubject').parsley().reset();\r\n            this.$cnt.find('#lDataType').parsley().reset();\r\n            this.$cnt.find('#lDomain').parsley().reset();\r\n\r\n            if (!valRes) return;\r\n            for (var i = 0; i < valRes.length; i++) {\r\n                switch (valRes[i].message) {\r\n                    case VErrors.TITLE_BLANK:\r\n                        this.$cnt.find('#lTitle').parsley().addError('TITLE_BLANK', {message: mlRes[this.lang][VErrors.TITLE_BLANK], assert: 'required', updateClass: true });\r\n                        break;\r\n                    case VErrors.SUBJECT_EMPTY:\r\n                        this.$cnt.find('#lSubject').parsley().addError('SUBJECT_EMPTY', {message: mlRes[this.lang][VErrors.SUBJECT_EMPTY], assert: 'required' });\r\n                        break;\r\n                    case VErrors.DATATYPE_EMPTY:\r\n                        this.$cnt.find('#lDataType').parsley().addError('DATATYPE_EMPTY', {message: mlRes[this.lang][VErrors.DATATYPE_EMPTY], assert: 'required' });\r\n                        break;\r\n                    case VErrors.CODELIST_EMPTY:\r\n                        this.$cnt.find('#lDomain').parsley().addError('CODELIST_EMPTY', {message: mlRes[this.lang][VErrors.CODELIST_EMPTY], assert: 'required' });\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        DSDColumnEditor.prototype.changed = function () {\r\n            return this.mlTitle.changed() || this.mlSupplemental.changed() || this.domainEditor.changed() || this.dynRadioSubj.changed() || this.dynRadioDataType.changed();\r\n        };\r\n        DSDColumnEditor.prototype._doML = function () {\r\n            this.$cnt.find(h.lblTitle).html(mlRes[this.lang]['title']);\r\n            this.$cnt.find(h.lblSuppl).html(mlRes[this.lang]['supplemental']);\r\n            this.$cnt.find(h.lblSubj).html(mlRes[this.lang]['subject']);\r\n            this.$cnt.find(h.lblDataType).html(mlRes[this.lang]['dataType']);\r\n            this.$cnt.find(h.lblDomain).html(mlRes[this.lang]['domain']);\r\n        };\r\n\r\n        DSDColumnEditor.prototype.destroy = function () {\r\n            this._unbindEvents();\r\n            this._detachValidator();\r\n            this.mlTitle.destroy();\r\n            this.mlSupplemental.destroy();\r\n            this.domainEditor.destroy();\r\n            this.dynRadioSubj.destroy();\r\n            this.dynRadioDataType.destroy();\r\n        };\r\n\r\n        return DSDColumnEditor;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/js/DSDColumnEditor.js\n ** module id = 25\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../config/Datatypes.json'\r\n],\r\n    function ($, Datatypes) {\r\n        var defConfig = {};\r\n\r\n        function DatatypeReader(config) {\r\n            this.config = {};\r\n            $.extend(true, this.config, defConfig, config);\r\n            this.datatypes = Datatypes;\r\n        };\r\n\r\n        DatatypeReader.prototype.getDatatypes = function () {\r\n            return this.datatypes;\r\n        }\r\n        DatatypeReader.prototype.getFilteredDatatypes = function (datatypeValues) {\r\n            if (!datatypeValues)\r\n                return null;\r\n            var toRet = [];\r\n            var toAdd;\r\n            for (var i = 0; i < datatypeValues.length; i++) {\r\n                {\r\n                    toAdd = this.getDatatype(datatypeValues[i]);\r\n                    if (toAdd)\r\n                        toRet.push(toAdd);\r\n                }\r\n            }\r\n            return toRet;\r\n        };\r\n        DatatypeReader.prototype.getDatatype = function (datatype) {\r\n            for (var i = 0; i < this.datatypes.length; i++) {\r\n                if (this.datatypes[i].value == datatype) {\r\n                    return this.datatypes[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        return DatatypeReader;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDConfigs/js/DatatypeReader.js\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = [\n\t{\n\t\t\"value\": \"\",\n\t\t\"text\": {\n\t\t\t\"EN\": \" \",\n\t\t\t\"FR\": \" \"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"code\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Code\",\n\t\t\t\"FR\": \"CodeFR\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"customCode\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Custom code\",\n\t\t\t\"FR\": \"Custom code\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"date\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Date\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"month\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Month\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"year\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Year\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"number\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Number\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"text\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Text\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"percentage\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Percentage\"\n\t\t}\n\t}\n];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDConfigs/config/Datatypes.json\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<table class=\\\"table table-bordered table-nonfluid\\\" id=tblColEditor data-parsley-validate data-validate=parsley> <tbody> <tr><td><label id=lTitle for=txtTitle>_Title</label></td><td id=txtTitle></td></tr> <tr style=display:none><td><label id=lSupplemental for=txtSupplemental>_Supplemental</label></td><td id=txtSupplemental></td></tr> <tr id=trSubj> <td><label id=lSubject for=radioSubj>_Subject</label></td> <td id=tdSubj></td> </tr> <tr id=trDataType> <td><label id=lDataType for=radioDataType>_Data type</label></td> <td id=tdDataType></td> </tr><tr id=trDomain> <td><label id=lDomain for=\\\"\\\">_Domain</label></td> <td id=tdDomainEditor></td> </tr> </tbody> </table> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/html/DSDColumnEditor.html\n ** module id = 28\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../../html/comp/DynamicRadio.html',\r\n    '../Events',\r\n    'amplify-pubsub'\r\n],\r\n    function ($, DynamicRadioHTML, Evts, amplify) {\r\n        var defConfig = {};\r\n        var h = {\r\n            idUID: '#txtUID',\r\n            idVersion: '#txtVersion',\r\n            idType: '#ddlType'\r\n        };\r\n        var evts = {\r\n            radioChanged: Evts.DYNAMIC_RADIO_CHANGED\r\n        };\r\n\r\n        function DynamicRadio(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n            this.groupName = null;\r\n            this.radioSettings;\r\n            this.$radioGroup;\r\n            this._changed = false;\r\n        };\r\n\r\n        DynamicRadio.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n        };\r\n\r\n        DynamicRadio.prototype.setRadios = function (group, radioSettings, checkedValue) {\r\n            this.groupName = group;\r\n            this.radioSettings = radioSettings;\r\n            this.$container.html('');\r\n            if (!radioSettings)\r\n                return;\r\n            if (radioSettings.length == 0)\r\n                return;\r\n            for (var i = 0; i < radioSettings.length; i++) {\r\n                this.$container.append(createRadio(group, radioSettings[i], checkedValue));\r\n            }\r\n\r\n            this.$radioGroup = this.$container.find('input[name=' + group + ']:radio');\r\n\r\n            this._bindEvents();\r\n        };\r\n\r\n        var createRadio = function (group, radioSetting, checkedValue) {\r\n            var radioId = createRadioId(group, radioSetting.value);\r\n            var $toRet = $(DynamicRadioHTML);\r\n            $toRet.find('label').text(radioSetting.text);\r\n            $toRet.find('label').attr('for', radioId);\r\n            $toRet.find('input').val(radioSetting.value);\r\n            $toRet.find('input').attr('name', group);\r\n            $toRet.find('input').attr('id', radioId);\r\n            $toRet.prop('required', true);\r\n            if (checkedValue && radioSetting.value == checkedValue)\r\n                $toRet.find('input').attr('checked', 'checked');\r\n            return $toRet;\r\n        };\r\n        var createRadioId = function (groupN, value) {\r\n            return \"rd\" + groupN + \"_\" + value;\r\n        };\r\n\r\n        DynamicRadio.prototype.get = function () {\r\n            if (!this.$radioGroup)\r\n                return null;\r\n            if (!this.$radioGroup.filter(':checked'))\r\n                return null;\r\n            return this.$radioGroup.filter(':checked').val();\r\n        };\r\n\r\n        DynamicRadio.prototype.set = function (toSet) {\r\n            this.reset();\r\n            if (!toSet)\r\n                return;\r\n            var r = this.$container.find(\"#\" + createRadioId(this.groupName, toSet));\r\n            r.prop('checked', true);\r\n            amplify.publish(evts.radioChanged, toSet, this.groupName);\r\n        };\r\n        DynamicRadio.prototype.reset = function () {\r\n            if (!this.$radioGroup)\r\n                return;\r\n            this.$radioGroup.removeAttr('checked');\r\n            this._changed = false;\r\n        };\r\n        DynamicRadio.prototype._bindEvents = function () {\r\n            var me = this;\r\n            $(this.$radioGroup.on('change', function () {\r\n                var v = me.$container.find('input[name=' + me.groupName + ']:checked').val();\r\n                amplify.publish(evts.radioChanged, v, me.groupName);\r\n                me._changed = true;\r\n            }));\r\n        };\r\n        DynamicRadio.prototype._unbindEvents = function () {\r\n            if (this.$radioGroup)\r\n                this.$radioGroup.off('change');\r\n        };\r\n\r\n        DynamicRadio.prototype.changed = function () {\r\n            return this._changed;\r\n        };\r\n\r\n        DynamicRadio.prototype.destroy = function () {\r\n            this._unbindEvents();\r\n        };\r\n\r\n        return DynamicRadio;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/js/comp/DynamicRadio.js\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = \"<span><input type=radio name=\\\"\\\" value=\\\"\\\" style=display:none /><label></label></span>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/html/comp/DynamicRadio.html\n ** module id = 30\n ** module chunks = 0\n **/","//TODO: the changed function must be done\r\n\r\ndefine(['jquery',\r\n    '../../html/comp/DomainEditor.html',\r\n    './domainEditors/CodelistSelector',\r\n    //'components/DSDEditor/DSDColumnEditor/js/comp/domainEditors/DatesRange',\r\n    'amplify-pubsub'\r\n],\r\n    function ($, DomainEditorHTML, CodelistSelector, amplify) {\r\n        var defConfig = {};\r\n        var h = {\r\n            idNoDataType: '#domEdit_noDatatype',\r\n            idNoDomain: '#domEdit_noDomain',\r\n            idEditor: '#domEdit_editor'\r\n        };\r\n        var evts = {\r\n        };\r\n\r\n        var MODES = {\r\n            code: 'code',\r\n            year: 'year',\r\n            month: 'month',\r\n            date: 'date',\r\n            customCode: 'customCode'\r\n        };\r\n\r\n        function DomainEditor(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n\r\n            this.mode = '';\r\n            this.$divNoDatatype = null;\r\n            this.$divNoDomain = null;\r\n            this.$divDomainEditor = null;\r\n\r\n            this.codelistSelector = null;\r\n            this._changed = false;\r\n\r\n            //console.log(\"DomainEditor\", this.config)\r\n        };\r\n\r\n        DomainEditor.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n\r\n            this.$container.html(DomainEditorHTML);\r\n            this.$divNoDatatype = this.$container.find(h.idNoDataType);\r\n            this.$divNoDomain = this.$container.find(h.idNoDomain);\r\n            this.$divDomainEditor = this.$container.find(h.idEditor);\r\n            this.$divNoDatatype.show();\r\n            this.$divNoDomain.hide();\r\n            this.$divDomainEditor.hide();\r\n            this._bindEvents();\r\n        };\r\n        DomainEditor.prototype.set = function (mode, subject, domain) {\r\n            //this.reset();\r\n            this._changed = false;\r\n            this.setMode(mode, subject);\r\n            switch (this.mode) {\r\n                case MODES.code:\r\n                    this.codelistSelector.set(subject, domain.codes);\r\n                    break;\r\n                case MODES.year:\r\n                case MODES.month:\r\n                case MODES.date:\r\n                    //this.datesSelector.setRange(domain.period);\r\n                    break;\r\n            }\r\n        };\r\n        DomainEditor.prototype.get = function () {\r\n            switch (this.mode) {\r\n                case MODES.code:\r\n                    return { codes: [this.codelistSelector.get()] };\r\n                    break;\r\n                case MODES.year:\r\n                case MODES.month:\r\n                case MODES.date:\r\n                    //var rng = this.datesSelector.getRange();\r\n                    //if (!rng) return null;\r\n                    //return { period: rng };\r\n                    break;\r\n            }\r\n        };\r\n        DomainEditor.prototype.reset = function () {\r\n            this.setMode('');\r\n            this._changed = false;\r\n        };\r\n\r\n        DomainEditor.prototype.setMode = function (mode, subject) {\r\n            //this.mode = mode;\r\n            if (this.mode == mode)\r\n                return;\r\n            this.mode = mode;\r\n            this.$divDomainEditor.empty();\r\n            this.$divDomainEditor.hide();\r\n            this.$divNoDomain.hide();\r\n            this.$divNoDatatype.hide();\r\n\r\n            //Domain handler is changing destroy the old one\r\n            if (this.codelistSelector)\r\n                this.codelistSelector.destroy();\r\n            this.codelistSelector = null;\r\n\r\n            switch (mode) {\r\n                case '':\r\n                    this.$divNoDatatype.show();\r\n                    break;\r\n                case MODES.code:\r\n                    this.$divDomainEditor.show();\r\n                    this.codelistSelector = new CodelistSelector(this.config);\r\n                    this.codelistSelector.render(this.$divDomainEditor);\r\n                    this.codelistSelector.setSubject(subject);\r\n                    //this.codelistSelector.setCodelists(this.cLists);\r\n                    break;\r\n                case MODES.year:\r\n                case MODES.month:\r\n                case MODES.date:\r\n                    this.$divDomainEditor.show();\r\n                    //this.datesSelector = new DatesRangeSelector();\r\n                    //this.datesSelector.render(this.$divDomainEditor);\r\n                    //this.datesSelector.setMode(mode);\r\n                    break;\r\n                case MODES.customCode:\r\n                    //this.$divDomainEditor.show();\r\n                    //this.customCodeSelector = new CustomCodesSelection();\r\n                    //this.customCodeSelector.render(this.$divDomainEditor);\r\n                    break;\r\n                default:\r\n                    this.$divNoDomain.show();\r\n                    break;\r\n            }\r\n        }\r\n        DomainEditor.prototype._bindEvents = function () { };\r\n        DomainEditor.prototype._unbindEvents = function () { };\r\n\r\n        DomainEditor.prototype.changed = function () { return this._changed;};\r\n        DomainEditor.prototype.destroy = function () {\r\n            if (this.codelistSelector)\r\n                this.codelistSelector.destroy();\r\n            this._unbindEvents();\r\n        };\r\n\r\n        return DomainEditor;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/js/comp/DomainEditor.js\n ** module id = 31\n ** module chunks = 0\n **/","module.exports = \"<div id=domEdit_noDatatype>Select a data type</div> <div id=domEdit_noDomain>No limit for this data type</div> <div id=domEdit_editor></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/html/comp/DomainEditor.html\n ** module id = 32\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../../../html/comp/domainEditors/CodelistSelector.html',\r\n    '../../../../DSDConfigs/js/CodelistConfigReader',\r\n    '../../Events',\r\n    'amplify-pubsub'\r\n],\r\n    function ($, CodelistSelectorHTML, CodelistConfigReader, Evts, amplify) {\r\n        var defConfig = {};\r\n        var h = {\r\n            idCodesDDL: '#clSelDDL',\r\n        };\r\n        var e = {\r\n            ddlChange: Evts.CODELIST_SELECTOR_CHANGED\r\n        };\r\n\r\n        var lang = 'EN';\r\n\r\n        function CodelistSelector(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, config, defConfig);\r\n\r\n            this.clReader = null;\r\n            this.tmpVal = \"\";\r\n            this.tmpSubj = \"\";\r\n            this.loaded = false;\r\n\r\n            //console.log(\"CodelistSelector\", this.config);\r\n        };\r\n\r\n        CodelistSelector.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n            this.$container.html(CodelistSelectorHTML);\r\n\r\n            this.$clDDl = this.$container.find(h.idCodesDDL);\r\n\r\n            this._bindEvents();\r\n\r\n            var me = this;\r\n            this.clReader = new CodelistConfigReader(this.config, function () { me._clLoaded(); });\r\n        };\r\n\r\n        CodelistSelector.prototype._clLoaded = function () {\r\n            this.loaded = true;\r\n            if (this.tmpVal != \"\") {\r\n                this.set(this.tmpSubj, this.tmpVal);\r\n                return;\r\n            }\r\n            if (this.tmpSubj != \"\") {\r\n                this.setSubject(this.tmpSubj);\r\n            }\r\n        };\r\n\r\n        CodelistSelector.prototype.setSubject = function (subj) {\r\n            if (!this.loaded) {\r\n                this.tmpSubj = subj;\r\n                return;\r\n            }\r\n\r\n            var cl = this.clReader.getFilteredCodelists(subj);\r\n            var selVal = this.$clDDl.val();\r\n            this.$clDDl.find('option').remove();\r\n\r\n            if (!cl)\r\n                return;\r\n\r\n            this.$clDDl.append($('<option>', { value: '', text: '' }));\r\n            for (var i = 0; i < cl.length; i++) {\r\n                this.$clDDl.append($('<option>', { value: cl[i].value, text: cl[i].text[lang] }));\r\n            }\r\n            if (cl.length == 1)//if there is just one option autoselect it\r\n                this.$clDDl.val(cl[0].value);\r\n            else if (selVal)//tries to reselect what was selected\r\n                this.$clDDl.val(selected);\r\n            //this.$clDDl.selectmenu('refresh', true); //Force an autorefresh or the auto select will not show\r\n        };\r\n\r\n        CodelistSelector.prototype.reset = function () {\r\n            this.$clDDl.find('option').remove();\r\n        }\r\n\r\n        CodelistSelector.prototype.set = function (subject, val) {\r\n            if (!this.loaded) {\r\n                this.tmpSubj = subject;\r\n                this.tmpVal = val;\r\n                return;\r\n            }\r\n            this.setSubject(subject);\r\n            if (!val || val.length == 0) {\r\n                this.$clDDl.val('');\r\n                return;\r\n            }\r\n            //TODO: Codelists can be more than one (make this multielement)\r\n            var toSet = val[0].idCodeList;\r\n            if (val[0].version)\r\n                toSet = toSet + \"|\" + val[0].version;\r\n            this.$clDDl.val(toSet);\r\n            //this.$clDDl.selectmenu('refresh', true); //Force an autorefresh or the auto select will not show\r\n        };\r\n        CodelistSelector.prototype.get = function () {\r\n            var selVal = this.$clDDl.val();\r\n            if (selVal == '')\r\n                return null;\r\n            var split = selVal.split('|');\r\n            if (split[1])\r\n                return { idCodeList: split[0], version: split[1] };\r\n            else\r\n                return { idCodeList: split[0] };\r\n        };\r\n        CodelistSelector.prototype._bindEvents = function () {\r\n            var me = this;\r\n            this.$clDDl.on('change', function (d) {\r\n                amplify.publish(e.ddlChange, me.$clDDl.val());\r\n            });\r\n        };\r\n        CodelistSelector.prototype._unbindEvents = function () {\r\n            this.$clDDl.off('change');\r\n        };\r\n        CodelistSelector.prototype.destroy = function () {\r\n            this._unbindEvents();\r\n        };\r\n\r\n        return CodelistSelector;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/js/comp/domainEditors/CodelistSelector.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = \"<select id=clSelDDL class=form-control></select>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDColumnEditor/html/comp/domainEditors/CodelistSelector.html\n ** module id = 34\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../config/ColumnEditorCfg.json'\r\n],\r\n    function ($, ColumnEditorCfg) {\r\n        var defConfig = {};\r\n\r\n        function ColumnEditorReader(config) {\r\n            this.config = {};\r\n            $.extend(true, this.config, defConfig, config);\r\n            this.columnECfg = ColumnEditorCfg;\r\n        };\r\n\r\n        ColumnEditorReader.prototype.getColumnEditorCfg = function () {\r\n            return this.columnECfg;\r\n        };\r\n        ColumnEditorReader.prototype.getColumnTypeSubjects = function (columnType) {\r\n            if (!this.columnECfg[columnType])\r\n                return null;\r\n            var toRet = [];\r\n            for (var i = 0; i < this.columnECfg[columnType].length; i++)\r\n                toRet.push(this.columnECfg[columnType][i].subject);\r\n            return toRet;\r\n        };\r\n\r\n        ColumnEditorReader.prototype.getSubjectDatatypes = function (columnType, subject) {\r\n            if (!this.columnECfg[columnType])\r\n                return null;\r\n\r\n            for (var i = 0; i < this.columnECfg[columnType].length; i++) {\r\n                if (this.columnECfg[columnType][i].subject == subject) {\r\n                    return this.columnECfg[columnType][i].datatypes;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return ColumnEditorReader;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDConfigs/js/ColumnEditorReader.js\n ** module id = 35\n ** module chunks = 0\n **/","module.exports = {\n\t\"dimension\": [\n\t\t{\n\t\t\t\"subject\": \"item\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"indicator\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"gender\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"residence\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"food\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"sector\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"fieldManagement\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"agriculturalPopulation\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"census\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"time\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"year\",\n\t\t\t\t\"month\",\n\t\t\t\t\"date\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"geo\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"undefined\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\",\n\t\t\t\t\"year\"\n\t\t\t]\n\t\t}\n\t],\n\t\"value\": [\n\t\t{\n\t\t\t\"subject\": \"value\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"number\",\n\t\t\t\t\"text\"\n\t\t\t]\n\t\t}\n\t],\n\t\"other\": [\n\t\t{\n\t\t\t\"subject\": \"flag\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\",\n\t\t\t\t\"text\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"subject\": \"um\",\n\t\t\t\"datatypes\": [\n\t\t\t\t\"code\"\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDConfigs/config/ColumnEditorCfg.json\n ** module id = 36\n ** module chunks = 0\n **/","define(['jquery',\r\n    '../config/Subjects.json'\r\n],\r\n    function ($, Subjects) {\r\n        var defConfig = {};\r\n\r\n        function SubjectReader(config) {\r\n            this.config = {};\r\n            $.extend(true, this.config, defConfig, config);\r\n            this.subjs = Subjects;\r\n        };\r\n\r\n        SubjectReader.prototype.getSubjects = function () {\r\n            return this.subjs;\r\n        }\r\n        SubjectReader.prototype.getFilteredSubjects = function (subjsValues) {\r\n            if (!subjsValues)\r\n                return null;\r\n            var toRet = [];\r\n            var toAdd;\r\n            for (var i = 0; i < subjsValues.length; i++) {\r\n                {\r\n                    toAdd = this.getSubject(subjsValues[i]);\r\n                    if (toAdd)\r\n                        toRet.push(toAdd);\r\n                }\r\n            }\r\n            return toRet;\r\n        };\r\n        SubjectReader.prototype.getSubject = function (subj) {\r\n            for (var i = 0; i < this.subjs.length; i++) {\r\n                if (this.subjs[i].value == subj)\r\n                    return this.subjs[i];\r\n            }\r\n            return null;\r\n        }\r\n        return SubjectReader;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDConfigs/js/SubjectReader.js\n ** module id = 37\n ** module chunks = 0\n **/","module.exports = [\n\t{\n\t\t\"value\": \"item\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Item\"\n\t\t},\n\t\t\"codelistSubject\": \"item\"\n\t},\n\t{\n\t\t\"value\": \"indicator\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Indicator\"\n\t\t},\n\t\t\"codelistSubject\": \"indicator\"\n\t},\n\t{\n\t\t\"value\": \"gender\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Gender\"\n\t\t},\n\t\t\"codelistSubject\": \"gender\"\n\t},\n\t{\n\t\t\"value\": \"residence\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Residence\"\n\t\t},\n\t\t\"codelistSubject\": \"residence\"\n\t},\n\t{\n\t\t\"value\": \"food\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Food\"\n\t\t},\n\t\t\"codelistSubject\": \"food\"\n\t},\n\t{\n\t\t\"value\": \"sector\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Sector\"\n\t\t},\n\t\t\"codelistSubject\": \"sector\"\n\t},\n\t{\n\t\t\"value\": \"fieldManagement\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Field Management\"\n\t\t},\n\t\t\"codelistSubject\": \"fieldManagement\"\n\t},\n\t{\n\t\t\"value\": \"agriculturalPopulation\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Agricultural\"\n\t\t},\n\t\t\"codelistSubject\": \"agriculturalPopulation\"\n\t},\n\t{\n\t\t\"value\": \"census\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Census\"\n\t\t},\n\t\t\"codelistSubject\": \"census\"\n\t},\n\t{\n\t\t\"value\": \"time\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Time\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"geo\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Geo\"\n\t\t},\n\t\t\"codelistSubject\": \"geo\"\n\t},\n\t{\n\t\t\"value\": \"flag\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Flag\"\n\t\t},\n\t\t\"codelistSubject\": \"flag\"\n\t},\n\t{\n\t\t\"value\": \"value\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"Value\"\n\t\t}\n\t},\n\t{\n\t\t\"value\": \"um\",\n\t\t\"text\": {\n\t\t\t\"EN\": \"UM\"\n\t\t},\n\t\t\"codelistSubject\": \"um\"\n\t}\n];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/DSDConfigs/config/Subjects.json\n ** module id = 38\n ** module chunks = 0\n **/","define([\r\n    'loglevel',\r\n    'jquery',\r\n    '../html/MLInput.html'\r\n], function (log, $, MLInputHTML) {\r\n        var defConfig = { langs: [\"EN\"] };\r\n        var line = '<tr><td>%lCode%</td><td><input type=\"text\" id=\"%idlCode%\" class=\"form-control\" /></td></tr>';\r\n        var idlCode = \"mlTD_\";\r\n\r\n        var h = {\r\n            idTblMLInput: '#tblMLInput',\r\n        };\r\n\r\n        function MLInput(config) {\r\n            this.config = {};\r\n            this.$container = null;\r\n            $.extend(true, this.config, defConfig, config);\r\n\r\n            this.$tblMLInput = null;\r\n            this.txt = [];\r\n\r\n            this._changed = false;\r\n        };\r\n\r\n        MLInput.prototype.render = function (cnt, config) {\r\n            $.extend(true, this.config, config);\r\n            this.$container = cnt;\r\n            this.$container.html(MLInputHTML);\r\n\r\n            this.$tblMLInput = this.$container.find(h.idTblMLInput);\r\n\r\n            this._create(this.config.langs);\r\n            this.bindEvents();\r\n        };\r\n\r\n        MLInput.prototype._create = function (lCodes) {\r\n\r\n            if (!lCodes)\r\n                return \"\";\r\n            var toAdd = \"\";\r\n            for (var i = 0; i < lCodes.length; i++)\r\n                toAdd += createLine(lCodes[i]);\r\n            this.$tblMLInput.html(toAdd);\r\n            this.txt = [];\r\n            for (i = 0; i < lCodes.length; i++)\r\n                this.txt.push(this.$tblMLInput.find(\"#\" + idlCode + \"\" + lCodes[i]));\r\n        }\r\n\r\n        function createLine(lCode) {\r\n            var toRet = line.replace(\"%lCode%\", lCode);\r\n            toRet = toRet.replace(\"%idlCode%\", idlCode + \"\" + lCode);\r\n            return toRet;\r\n        }\r\n\r\n        MLInput.prototype.set = function (val) {\r\n\r\n            this.reset();\r\n            if (!val)\r\n                return;\r\n            for (var i = 0; i < this.config.langs.length; i++) {\r\n                if (val[this.config.langs[i]]) {\r\n                    this.txt[i].val(val[this.config.langs[i]]);\r\n                }\r\n            }\r\n        };\r\n        MLInput.prototype.get = function () {\r\n            if (!this.txt)\r\n                return null;\r\n            var toRet = {};\r\n            var v = \"\";\r\n            for (var i = 0; i < this.config.langs.length; i++) {\r\n                v = this.txt[i].val().trim();\r\n                if (v)\r\n                    toRet[this.config.langs[i].toUpperCase()] = v;\r\n            }\r\n            return toRet;\r\n        };\r\n        MLInput.prototype.reset = function () {\r\n            if (!this.txt)\r\n                return;\r\n            for (var i = 0; i < this.txt.length; i++) {\r\n                this.txt[i].val('');\r\n            }\r\n            this._changed = false;\r\n        };\r\n        MLInput.prototype.isEmpty = function () {\r\n            var v = this.get();\r\n            if ($.isEmptyObject(v))\r\n                return true;\r\n            return false;\r\n        };\r\n        MLInput.prototype.bindEvents = function () {\r\n            if (!this.txt)\r\n                return;\r\n            var me = this;\r\n            for (var i = 0; i < this.txt.length; i++) {\r\n                this.txt[i].on('keyup', function () { me._changed = true;})\r\n            }\r\n        };\r\n        MLInput.prototype.unbindEvents = function () {\r\n            if (!this.txt)\r\n                return;\r\n            for (var i = 0; i < this.txt.length; i++) {\r\n                this.txt[i].off('keyup');\r\n            }\r\n        };\r\n        MLInput.prototype.changed = function () { return this._changed; };\r\n        MLInput.prototype.destroy = function () { this.unbindEvents()};\r\n        return MLInput;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/MLInput.js\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = \"<table> <tbody id=tblMLInput> </tbody> </table> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/html/MLInput.html\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"parsleyjs\"\n ** module id = 41\n ** module chunks = 0\n **/","define([\r\n],\r\nfunction () {\r\n    var ColumnIDGenerator = function () {\r\n    };\r\n    ColumnIDGenerator.prototype.generate = function (columns, newCol) {\r\n        var type = \"OTHER\";\r\n        if (newCol.key)\r\n            type = \"DIMENSION\";\r\n        else if (newCol.subject == 'value')\r\n            type = \"VALUE\";\r\n        return this._generate(columns, type);\r\n    }\r\n\r\n    ColumnIDGenerator.prototype._generate = function (columns, type) {\r\n        if (!columns)\r\n            return \"\";\r\n        var id = type.toUpperCase();\r\n        var nbr = 0;\r\n\r\n        var found = true;\r\n        while (found) {\r\n            found = false;\r\n            var newId = id + \"\" + nbr;\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columns[i].id == newId) {\r\n                    found = true;\r\n                    nbr++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        return id + \"\" + nbr;\r\n    }\r\n\r\n    \r\n    return ColumnIDGenerator;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DSDEditor/ColumnIDGenerator.js\n ** module id = 42\n ** module chunks = 0\n **/"],"sourceRoot":""}